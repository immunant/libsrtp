#![allow(dead_code, mutable_transmutes, non_camel_case_types, non_snake_case, non_upper_case_globals, unused_assignments, unused_mut)]
use crate::v128_t;
extern "C" {
    fn v128_copy_octet_string(x: *mut v128_t, s: *const uint8_t);
}
pub type __uint8_t = libc::c_uchar;
pub type __uint16_t = libc::c_ushort;
pub type __uint32_t = libc::c_uint;
pub type __uint64_t = libc::c_ulong;
pub type uint8_t = __uint8_t;
pub type uint16_t = __uint16_t;
pub type uint32_t = __uint32_t;
pub type uint64_t = __uint64_t;
pub type srtp_err_status_t = libc::c_uint;
pub const srtp_err_status_pkt_idx_adv: srtp_err_status_t = 27;
pub const srtp_err_status_pkt_idx_old: srtp_err_status_t = 26;
pub const srtp_err_status_bad_mki: srtp_err_status_t = 25;
pub const srtp_err_status_pfkey_err: srtp_err_status_t = 24;
pub const srtp_err_status_semaphore_err: srtp_err_status_t = 23;
pub const srtp_err_status_encode_err: srtp_err_status_t = 22;
pub const srtp_err_status_parse_err: srtp_err_status_t = 21;
pub const srtp_err_status_write_fail: srtp_err_status_t = 20;
pub const srtp_err_status_read_fail: srtp_err_status_t = 19;
pub const srtp_err_status_nonce_bad: srtp_err_status_t = 18;
pub const srtp_err_status_signal_err: srtp_err_status_t = 17;
pub const srtp_err_status_socket_err: srtp_err_status_t = 16;
pub const srtp_err_status_key_expired: srtp_err_status_t = 15;
pub const srtp_err_status_cant_check: srtp_err_status_t = 14;
pub const srtp_err_status_no_ctx: srtp_err_status_t = 13;
pub const srtp_err_status_no_such_op: srtp_err_status_t = 12;
pub const srtp_err_status_algo_fail: srtp_err_status_t = 11;
pub const srtp_err_status_replay_old: srtp_err_status_t = 10;
pub const srtp_err_status_replay_fail: srtp_err_status_t = 9;
pub const srtp_err_status_cipher_fail: srtp_err_status_t = 8;
pub const srtp_err_status_auth_fail: srtp_err_status_t = 7;
pub const srtp_err_status_terminus: srtp_err_status_t = 6;
pub const srtp_err_status_init_fail: srtp_err_status_t = 5;
pub const srtp_err_status_dealloc_fail: srtp_err_status_t = 4;
pub const srtp_err_status_alloc_fail: srtp_err_status_t = 3;
pub const srtp_err_status_bad_param: srtp_err_status_t = 2;
pub const srtp_err_status_fail: srtp_err_status_t = 1;
pub const srtp_err_status_ok: srtp_err_status_t = 0;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct srtp_aes_expanded_key_t {
    pub round: [v128_t; 15],
    pub num_rounds: libc::c_int,
}
static mut T0: [uint32_t; 256] = [
    0xa56363c6 as libc::c_uint,
    0x847c7cf8 as libc::c_uint,
    0x997777ee as libc::c_uint,
    0x8d7b7bf6 as libc::c_uint,
    0xdf2f2ff as libc::c_int as uint32_t,
    0xbd6b6bd6 as libc::c_uint,
    0xb16f6fde as libc::c_uint,
    0x54c5c591 as libc::c_int as uint32_t,
    0x50303060 as libc::c_int as uint32_t,
    0x3010102 as libc::c_int as uint32_t,
    0xa96767ce as libc::c_uint,
    0x7d2b2b56 as libc::c_int as uint32_t,
    0x19fefee7 as libc::c_int as uint32_t,
    0x62d7d7b5 as libc::c_int as uint32_t,
    0xe6abab4d as libc::c_uint,
    0x9a7676ec as libc::c_uint,
    0x45caca8f as libc::c_int as uint32_t,
    0x9d82821f as libc::c_uint,
    0x40c9c989 as libc::c_int as uint32_t,
    0x877d7dfa as libc::c_uint,
    0x15fafaef as libc::c_int as uint32_t,
    0xeb5959b2 as libc::c_uint,
    0xc947478e as libc::c_uint,
    0xbf0f0fb as libc::c_int as uint32_t,
    0xecadad41 as libc::c_uint,
    0x67d4d4b3 as libc::c_int as uint32_t,
    0xfda2a25f as libc::c_uint,
    0xeaafaf45 as libc::c_uint,
    0xbf9c9c23 as libc::c_uint,
    0xf7a4a453 as libc::c_uint,
    0x967272e4 as libc::c_uint,
    0x5bc0c09b as libc::c_int as uint32_t,
    0xc2b7b775 as libc::c_uint,
    0x1cfdfde1 as libc::c_int as uint32_t,
    0xae93933d as libc::c_uint,
    0x6a26264c as libc::c_int as uint32_t,
    0x5a36366c as libc::c_int as uint32_t,
    0x413f3f7e as libc::c_int as uint32_t,
    0x2f7f7f5 as libc::c_int as uint32_t,
    0x4fcccc83 as libc::c_int as uint32_t,
    0x5c343468 as libc::c_int as uint32_t,
    0xf4a5a551 as libc::c_uint,
    0x34e5e5d1 as libc::c_int as uint32_t,
    0x8f1f1f9 as libc::c_int as uint32_t,
    0x937171e2 as libc::c_uint,
    0x73d8d8ab as libc::c_int as uint32_t,
    0x53313162 as libc::c_int as uint32_t,
    0x3f15152a as libc::c_int as uint32_t,
    0xc040408 as libc::c_int as uint32_t,
    0x52c7c795 as libc::c_int as uint32_t,
    0x65232346 as libc::c_int as uint32_t,
    0x5ec3c39d as libc::c_int as uint32_t,
    0x28181830 as libc::c_int as uint32_t,
    0xa1969637 as libc::c_uint,
    0xf05050a as libc::c_int as uint32_t,
    0xb59a9a2f as libc::c_uint,
    0x907070e as libc::c_int as uint32_t,
    0x36121224 as libc::c_int as uint32_t,
    0x9b80801b as libc::c_uint,
    0x3de2e2df as libc::c_int as uint32_t,
    0x26ebebcd as libc::c_int as uint32_t,
    0x6927274e as libc::c_int as uint32_t,
    0xcdb2b27f as libc::c_uint,
    0x9f7575ea as libc::c_uint,
    0x1b090912 as libc::c_int as uint32_t,
    0x9e83831d as libc::c_uint,
    0x742c2c58 as libc::c_int as uint32_t,
    0x2e1a1a34 as libc::c_int as uint32_t,
    0x2d1b1b36 as libc::c_int as uint32_t,
    0xb26e6edc as libc::c_uint,
    0xee5a5ab4 as libc::c_uint,
    0xfba0a05b as libc::c_uint,
    0xf65252a4 as libc::c_uint,
    0x4d3b3b76 as libc::c_int as uint32_t,
    0x61d6d6b7 as libc::c_int as uint32_t,
    0xceb3b37d as libc::c_uint,
    0x7b292952 as libc::c_int as uint32_t,
    0x3ee3e3dd as libc::c_int as uint32_t,
    0x712f2f5e as libc::c_int as uint32_t,
    0x97848413 as libc::c_uint,
    0xf55353a6 as libc::c_uint,
    0x68d1d1b9 as libc::c_int as uint32_t,
    0 as libc::c_int as uint32_t,
    0x2cededc1 as libc::c_int as uint32_t,
    0x60202040 as libc::c_int as uint32_t,
    0x1ffcfce3 as libc::c_int as uint32_t,
    0xc8b1b179 as libc::c_uint,
    0xed5b5bb6 as libc::c_uint,
    0xbe6a6ad4 as libc::c_uint,
    0x46cbcb8d as libc::c_int as uint32_t,
    0xd9bebe67 as libc::c_uint,
    0x4b393972 as libc::c_int as uint32_t,
    0xde4a4a94 as libc::c_uint,
    0xd44c4c98 as libc::c_uint,
    0xe85858b0 as libc::c_uint,
    0x4acfcf85 as libc::c_int as uint32_t,
    0x6bd0d0bb as libc::c_int as uint32_t,
    0x2aefefc5 as libc::c_int as uint32_t,
    0xe5aaaa4f as libc::c_uint,
    0x16fbfbed as libc::c_int as uint32_t,
    0xc5434386 as libc::c_uint,
    0xd74d4d9a as libc::c_uint,
    0x55333366 as libc::c_int as uint32_t,
    0x94858511 as libc::c_uint,
    0xcf45458a as libc::c_uint,
    0x10f9f9e9 as libc::c_int as uint32_t,
    0x6020204 as libc::c_int as uint32_t,
    0x817f7ffe as libc::c_uint,
    0xf05050a0 as libc::c_uint,
    0x443c3c78 as libc::c_int as uint32_t,
    0xba9f9f25 as libc::c_uint,
    0xe3a8a84b as libc::c_uint,
    0xf35151a2 as libc::c_uint,
    0xfea3a35d as libc::c_uint,
    0xc0404080 as libc::c_uint,
    0x8a8f8f05 as libc::c_uint,
    0xad92923f as libc::c_uint,
    0xbc9d9d21 as libc::c_uint,
    0x48383870 as libc::c_int as uint32_t,
    0x4f5f5f1 as libc::c_int as uint32_t,
    0xdfbcbc63 as libc::c_uint,
    0xc1b6b677 as libc::c_uint,
    0x75dadaaf as libc::c_int as uint32_t,
    0x63212142 as libc::c_int as uint32_t,
    0x30101020 as libc::c_int as uint32_t,
    0x1affffe5 as libc::c_int as uint32_t,
    0xef3f3fd as libc::c_int as uint32_t,
    0x6dd2d2bf as libc::c_int as uint32_t,
    0x4ccdcd81 as libc::c_int as uint32_t,
    0x140c0c18 as libc::c_int as uint32_t,
    0x35131326 as libc::c_int as uint32_t,
    0x2fececc3 as libc::c_int as uint32_t,
    0xe15f5fbe as libc::c_uint,
    0xa2979735 as libc::c_uint,
    0xcc444488 as libc::c_uint,
    0x3917172e as libc::c_int as uint32_t,
    0x57c4c493 as libc::c_int as uint32_t,
    0xf2a7a755 as libc::c_uint,
    0x827e7efc as libc::c_uint,
    0x473d3d7a as libc::c_int as uint32_t,
    0xac6464c8 as libc::c_uint,
    0xe75d5dba as libc::c_uint,
    0x2b191932 as libc::c_int as uint32_t,
    0x957373e6 as libc::c_uint,
    0xa06060c0 as libc::c_uint,
    0x98818119 as libc::c_uint,
    0xd14f4f9e as libc::c_uint,
    0x7fdcdca3 as libc::c_int as uint32_t,
    0x66222244 as libc::c_int as uint32_t,
    0x7e2a2a54 as libc::c_int as uint32_t,
    0xab90903b as libc::c_uint,
    0x8388880b as libc::c_uint,
    0xca46468c as libc::c_uint,
    0x29eeeec7 as libc::c_int as uint32_t,
    0xd3b8b86b as libc::c_uint,
    0x3c141428 as libc::c_int as uint32_t,
    0x79dedea7 as libc::c_int as uint32_t,
    0xe25e5ebc as libc::c_uint,
    0x1d0b0b16 as libc::c_int as uint32_t,
    0x76dbdbad as libc::c_int as uint32_t,
    0x3be0e0db as libc::c_int as uint32_t,
    0x56323264 as libc::c_int as uint32_t,
    0x4e3a3a74 as libc::c_int as uint32_t,
    0x1e0a0a14 as libc::c_int as uint32_t,
    0xdb494992 as libc::c_uint,
    0xa06060c as libc::c_int as uint32_t,
    0x6c242448 as libc::c_int as uint32_t,
    0xe45c5cb8 as libc::c_uint,
    0x5dc2c29f as libc::c_int as uint32_t,
    0x6ed3d3bd as libc::c_int as uint32_t,
    0xefacac43 as libc::c_uint,
    0xa66262c4 as libc::c_uint,
    0xa8919139 as libc::c_uint,
    0xa4959531 as libc::c_uint,
    0x37e4e4d3 as libc::c_int as uint32_t,
    0x8b7979f2 as libc::c_uint,
    0x32e7e7d5 as libc::c_int as uint32_t,
    0x43c8c88b as libc::c_int as uint32_t,
    0x5937376e as libc::c_int as uint32_t,
    0xb76d6dda as libc::c_uint,
    0x8c8d8d01 as libc::c_uint,
    0x64d5d5b1 as libc::c_int as uint32_t,
    0xd24e4e9c as libc::c_uint,
    0xe0a9a949 as libc::c_uint,
    0xb46c6cd8 as libc::c_uint,
    0xfa5656ac as libc::c_uint,
    0x7f4f4f3 as libc::c_int as uint32_t,
    0x25eaeacf as libc::c_int as uint32_t,
    0xaf6565ca as libc::c_uint,
    0x8e7a7af4 as libc::c_uint,
    0xe9aeae47 as libc::c_uint,
    0x18080810 as libc::c_int as uint32_t,
    0xd5baba6f as libc::c_uint,
    0x887878f0 as libc::c_uint,
    0x6f25254a as libc::c_int as uint32_t,
    0x722e2e5c as libc::c_int as uint32_t,
    0x241c1c38 as libc::c_int as uint32_t,
    0xf1a6a657 as libc::c_uint,
    0xc7b4b473 as libc::c_uint,
    0x51c6c697 as libc::c_int as uint32_t,
    0x23e8e8cb as libc::c_int as uint32_t,
    0x7cdddda1 as libc::c_int as uint32_t,
    0x9c7474e8 as libc::c_uint,
    0x211f1f3e as libc::c_int as uint32_t,
    0xdd4b4b96 as libc::c_uint,
    0xdcbdbd61 as libc::c_uint,
    0x868b8b0d as libc::c_uint,
    0x858a8a0f as libc::c_uint,
    0x907070e0 as libc::c_uint,
    0x423e3e7c as libc::c_int as uint32_t,
    0xc4b5b571 as libc::c_uint,
    0xaa6666cc as libc::c_uint,
    0xd8484890 as libc::c_uint,
    0x5030306 as libc::c_int as uint32_t,
    0x1f6f6f7 as libc::c_int as uint32_t,
    0x120e0e1c as libc::c_int as uint32_t,
    0xa36161c2 as libc::c_uint,
    0x5f35356a as libc::c_int as uint32_t,
    0xf95757ae as libc::c_uint,
    0xd0b9b969 as libc::c_uint,
    0x91868617 as libc::c_uint,
    0x58c1c199 as libc::c_int as uint32_t,
    0x271d1d3a as libc::c_int as uint32_t,
    0xb99e9e27 as libc::c_uint,
    0x38e1e1d9 as libc::c_int as uint32_t,
    0x13f8f8eb as libc::c_int as uint32_t,
    0xb398982b as libc::c_uint,
    0x33111122 as libc::c_int as uint32_t,
    0xbb6969d2 as libc::c_uint,
    0x70d9d9a9 as libc::c_int as uint32_t,
    0x898e8e07 as libc::c_uint,
    0xa7949433 as libc::c_uint,
    0xb69b9b2d as libc::c_uint,
    0x221e1e3c as libc::c_int as uint32_t,
    0x92878715 as libc::c_uint,
    0x20e9e9c9 as libc::c_int as uint32_t,
    0x49cece87 as libc::c_int as uint32_t,
    0xff5555aa as libc::c_uint,
    0x78282850 as libc::c_int as uint32_t,
    0x7adfdfa5 as libc::c_int as uint32_t,
    0x8f8c8c03 as libc::c_uint,
    0xf8a1a159 as libc::c_uint,
    0x80898909 as libc::c_uint,
    0x170d0d1a as libc::c_int as uint32_t,
    0xdabfbf65 as libc::c_uint,
    0x31e6e6d7 as libc::c_int as uint32_t,
    0xc6424284 as libc::c_uint,
    0xb86868d0 as libc::c_uint,
    0xc3414182 as libc::c_uint,
    0xb0999929 as libc::c_uint,
    0x772d2d5a as libc::c_int as uint32_t,
    0x110f0f1e as libc::c_int as uint32_t,
    0xcbb0b07b as libc::c_uint,
    0xfc5454a8 as libc::c_uint,
    0xd6bbbb6d as libc::c_uint,
    0x3a16162c as libc::c_int as uint32_t,
];
static mut T1: [uint32_t; 256] = [
    0x6363c6a5 as libc::c_int as uint32_t,
    0x7c7cf884 as libc::c_int as uint32_t,
    0x7777ee99 as libc::c_int as uint32_t,
    0x7b7bf68d as libc::c_int as uint32_t,
    0xf2f2ff0d as libc::c_uint,
    0x6b6bd6bd as libc::c_int as uint32_t,
    0x6f6fdeb1 as libc::c_int as uint32_t,
    0xc5c59154 as libc::c_uint,
    0x30306050 as libc::c_int as uint32_t,
    0x1010203 as libc::c_int as uint32_t,
    0x6767cea9 as libc::c_int as uint32_t,
    0x2b2b567d as libc::c_int as uint32_t,
    0xfefee719 as libc::c_uint,
    0xd7d7b562 as libc::c_uint,
    0xabab4de6 as libc::c_uint,
    0x7676ec9a as libc::c_int as uint32_t,
    0xcaca8f45 as libc::c_uint,
    0x82821f9d as libc::c_uint,
    0xc9c98940 as libc::c_uint,
    0x7d7dfa87 as libc::c_int as uint32_t,
    0xfafaef15 as libc::c_uint,
    0x5959b2eb as libc::c_int as uint32_t,
    0x47478ec9 as libc::c_int as uint32_t,
    0xf0f0fb0b as libc::c_uint,
    0xadad41ec as libc::c_uint,
    0xd4d4b367 as libc::c_uint,
    0xa2a25ffd as libc::c_uint,
    0xafaf45ea as libc::c_uint,
    0x9c9c23bf as libc::c_uint,
    0xa4a453f7 as libc::c_uint,
    0x7272e496 as libc::c_int as uint32_t,
    0xc0c09b5b as libc::c_uint,
    0xb7b775c2 as libc::c_uint,
    0xfdfde11c as libc::c_uint,
    0x93933dae as libc::c_uint,
    0x26264c6a as libc::c_int as uint32_t,
    0x36366c5a as libc::c_int as uint32_t,
    0x3f3f7e41 as libc::c_int as uint32_t,
    0xf7f7f502 as libc::c_uint,
    0xcccc834f as libc::c_uint,
    0x3434685c as libc::c_int as uint32_t,
    0xa5a551f4 as libc::c_uint,
    0xe5e5d134 as libc::c_uint,
    0xf1f1f908 as libc::c_uint,
    0x7171e293 as libc::c_int as uint32_t,
    0xd8d8ab73 as libc::c_uint,
    0x31316253 as libc::c_int as uint32_t,
    0x15152a3f as libc::c_int as uint32_t,
    0x404080c as libc::c_int as uint32_t,
    0xc7c79552 as libc::c_uint,
    0x23234665 as libc::c_int as uint32_t,
    0xc3c39d5e as libc::c_uint,
    0x18183028 as libc::c_int as uint32_t,
    0x969637a1 as libc::c_uint,
    0x5050a0f as libc::c_int as uint32_t,
    0x9a9a2fb5 as libc::c_uint,
    0x7070e09 as libc::c_int as uint32_t,
    0x12122436 as libc::c_int as uint32_t,
    0x80801b9b as libc::c_uint,
    0xe2e2df3d as libc::c_uint,
    0xebebcd26 as libc::c_uint,
    0x27274e69 as libc::c_int as uint32_t,
    0xb2b27fcd as libc::c_uint,
    0x7575ea9f as libc::c_int as uint32_t,
    0x909121b as libc::c_int as uint32_t,
    0x83831d9e as libc::c_uint,
    0x2c2c5874 as libc::c_int as uint32_t,
    0x1a1a342e as libc::c_int as uint32_t,
    0x1b1b362d as libc::c_int as uint32_t,
    0x6e6edcb2 as libc::c_int as uint32_t,
    0x5a5ab4ee as libc::c_int as uint32_t,
    0xa0a05bfb as libc::c_uint,
    0x5252a4f6 as libc::c_int as uint32_t,
    0x3b3b764d as libc::c_int as uint32_t,
    0xd6d6b761 as libc::c_uint,
    0xb3b37dce as libc::c_uint,
    0x2929527b as libc::c_int as uint32_t,
    0xe3e3dd3e as libc::c_uint,
    0x2f2f5e71 as libc::c_int as uint32_t,
    0x84841397 as libc::c_uint,
    0x5353a6f5 as libc::c_int as uint32_t,
    0xd1d1b968 as libc::c_uint,
    0 as libc::c_int as uint32_t,
    0xededc12c as libc::c_uint,
    0x20204060 as libc::c_int as uint32_t,
    0xfcfce31f as libc::c_uint,
    0xb1b179c8 as libc::c_uint,
    0x5b5bb6ed as libc::c_int as uint32_t,
    0x6a6ad4be as libc::c_int as uint32_t,
    0xcbcb8d46 as libc::c_uint,
    0xbebe67d9 as libc::c_uint,
    0x3939724b as libc::c_int as uint32_t,
    0x4a4a94de as libc::c_int as uint32_t,
    0x4c4c98d4 as libc::c_int as uint32_t,
    0x5858b0e8 as libc::c_int as uint32_t,
    0xcfcf854a as libc::c_uint,
    0xd0d0bb6b as libc::c_uint,
    0xefefc52a as libc::c_uint,
    0xaaaa4fe5 as libc::c_uint,
    0xfbfbed16 as libc::c_uint,
    0x434386c5 as libc::c_int as uint32_t,
    0x4d4d9ad7 as libc::c_int as uint32_t,
    0x33336655 as libc::c_int as uint32_t,
    0x85851194 as libc::c_uint,
    0x45458acf as libc::c_int as uint32_t,
    0xf9f9e910 as libc::c_uint,
    0x2020406 as libc::c_int as uint32_t,
    0x7f7ffe81 as libc::c_int as uint32_t,
    0x5050a0f0 as libc::c_int as uint32_t,
    0x3c3c7844 as libc::c_int as uint32_t,
    0x9f9f25ba as libc::c_uint,
    0xa8a84be3 as libc::c_uint,
    0x5151a2f3 as libc::c_int as uint32_t,
    0xa3a35dfe as libc::c_uint,
    0x404080c0 as libc::c_int as uint32_t,
    0x8f8f058a as libc::c_uint,
    0x92923fad as libc::c_uint,
    0x9d9d21bc as libc::c_uint,
    0x38387048 as libc::c_int as uint32_t,
    0xf5f5f104 as libc::c_uint,
    0xbcbc63df as libc::c_uint,
    0xb6b677c1 as libc::c_uint,
    0xdadaaf75 as libc::c_uint,
    0x21214263 as libc::c_int as uint32_t,
    0x10102030 as libc::c_int as uint32_t,
    0xffffe51a as libc::c_uint,
    0xf3f3fd0e as libc::c_uint,
    0xd2d2bf6d as libc::c_uint,
    0xcdcd814c as libc::c_uint,
    0xc0c1814 as libc::c_int as uint32_t,
    0x13132635 as libc::c_int as uint32_t,
    0xececc32f as libc::c_uint,
    0x5f5fbee1 as libc::c_int as uint32_t,
    0x979735a2 as libc::c_uint,
    0x444488cc as libc::c_int as uint32_t,
    0x17172e39 as libc::c_int as uint32_t,
    0xc4c49357 as libc::c_uint,
    0xa7a755f2 as libc::c_uint,
    0x7e7efc82 as libc::c_int as uint32_t,
    0x3d3d7a47 as libc::c_int as uint32_t,
    0x6464c8ac as libc::c_int as uint32_t,
    0x5d5dbae7 as libc::c_int as uint32_t,
    0x1919322b as libc::c_int as uint32_t,
    0x7373e695 as libc::c_int as uint32_t,
    0x6060c0a0 as libc::c_int as uint32_t,
    0x81811998 as libc::c_uint,
    0x4f4f9ed1 as libc::c_int as uint32_t,
    0xdcdca37f as libc::c_uint,
    0x22224466 as libc::c_int as uint32_t,
    0x2a2a547e as libc::c_int as uint32_t,
    0x90903bab as libc::c_uint,
    0x88880b83 as libc::c_uint,
    0x46468cca as libc::c_int as uint32_t,
    0xeeeec729 as libc::c_uint,
    0xb8b86bd3 as libc::c_uint,
    0x1414283c as libc::c_int as uint32_t,
    0xdedea779 as libc::c_uint,
    0x5e5ebce2 as libc::c_int as uint32_t,
    0xb0b161d as libc::c_int as uint32_t,
    0xdbdbad76 as libc::c_uint,
    0xe0e0db3b as libc::c_uint,
    0x32326456 as libc::c_int as uint32_t,
    0x3a3a744e as libc::c_int as uint32_t,
    0xa0a141e as libc::c_int as uint32_t,
    0x494992db as libc::c_int as uint32_t,
    0x6060c0a as libc::c_int as uint32_t,
    0x2424486c as libc::c_int as uint32_t,
    0x5c5cb8e4 as libc::c_int as uint32_t,
    0xc2c29f5d as libc::c_uint,
    0xd3d3bd6e as libc::c_uint,
    0xacac43ef as libc::c_uint,
    0x6262c4a6 as libc::c_int as uint32_t,
    0x919139a8 as libc::c_uint,
    0x959531a4 as libc::c_uint,
    0xe4e4d337 as libc::c_uint,
    0x7979f28b as libc::c_int as uint32_t,
    0xe7e7d532 as libc::c_uint,
    0xc8c88b43 as libc::c_uint,
    0x37376e59 as libc::c_int as uint32_t,
    0x6d6ddab7 as libc::c_int as uint32_t,
    0x8d8d018c as libc::c_uint,
    0xd5d5b164 as libc::c_uint,
    0x4e4e9cd2 as libc::c_int as uint32_t,
    0xa9a949e0 as libc::c_uint,
    0x6c6cd8b4 as libc::c_int as uint32_t,
    0x5656acfa as libc::c_int as uint32_t,
    0xf4f4f307 as libc::c_uint,
    0xeaeacf25 as libc::c_uint,
    0x6565caaf as libc::c_int as uint32_t,
    0x7a7af48e as libc::c_int as uint32_t,
    0xaeae47e9 as libc::c_uint,
    0x8081018 as libc::c_int as uint32_t,
    0xbaba6fd5 as libc::c_uint,
    0x7878f088 as libc::c_int as uint32_t,
    0x25254a6f as libc::c_int as uint32_t,
    0x2e2e5c72 as libc::c_int as uint32_t,
    0x1c1c3824 as libc::c_int as uint32_t,
    0xa6a657f1 as libc::c_uint,
    0xb4b473c7 as libc::c_uint,
    0xc6c69751 as libc::c_uint,
    0xe8e8cb23 as libc::c_uint,
    0xdddda17c as libc::c_uint,
    0x7474e89c as libc::c_int as uint32_t,
    0x1f1f3e21 as libc::c_int as uint32_t,
    0x4b4b96dd as libc::c_int as uint32_t,
    0xbdbd61dc as libc::c_uint,
    0x8b8b0d86 as libc::c_uint,
    0x8a8a0f85 as libc::c_uint,
    0x7070e090 as libc::c_int as uint32_t,
    0x3e3e7c42 as libc::c_int as uint32_t,
    0xb5b571c4 as libc::c_uint,
    0x6666ccaa as libc::c_int as uint32_t,
    0x484890d8 as libc::c_int as uint32_t,
    0x3030605 as libc::c_int as uint32_t,
    0xf6f6f701 as libc::c_uint,
    0xe0e1c12 as libc::c_int as uint32_t,
    0x6161c2a3 as libc::c_int as uint32_t,
    0x35356a5f as libc::c_int as uint32_t,
    0x5757aef9 as libc::c_int as uint32_t,
    0xb9b969d0 as libc::c_uint,
    0x86861791 as libc::c_uint,
    0xc1c19958 as libc::c_uint,
    0x1d1d3a27 as libc::c_int as uint32_t,
    0x9e9e27b9 as libc::c_uint,
    0xe1e1d938 as libc::c_uint,
    0xf8f8eb13 as libc::c_uint,
    0x98982bb3 as libc::c_uint,
    0x11112233 as libc::c_int as uint32_t,
    0x6969d2bb as libc::c_int as uint32_t,
    0xd9d9a970 as libc::c_uint,
    0x8e8e0789 as libc::c_uint,
    0x949433a7 as libc::c_uint,
    0x9b9b2db6 as libc::c_uint,
    0x1e1e3c22 as libc::c_int as uint32_t,
    0x87871592 as libc::c_uint,
    0xe9e9c920 as libc::c_uint,
    0xcece8749 as libc::c_uint,
    0x5555aaff as libc::c_int as uint32_t,
    0x28285078 as libc::c_int as uint32_t,
    0xdfdfa57a as libc::c_uint,
    0x8c8c038f as libc::c_uint,
    0xa1a159f8 as libc::c_uint,
    0x89890980 as libc::c_uint,
    0xd0d1a17 as libc::c_int as uint32_t,
    0xbfbf65da as libc::c_uint,
    0xe6e6d731 as libc::c_uint,
    0x424284c6 as libc::c_int as uint32_t,
    0x6868d0b8 as libc::c_int as uint32_t,
    0x414182c3 as libc::c_int as uint32_t,
    0x999929b0 as libc::c_uint,
    0x2d2d5a77 as libc::c_int as uint32_t,
    0xf0f1e11 as libc::c_int as uint32_t,
    0xb0b07bcb as libc::c_uint,
    0x5454a8fc as libc::c_int as uint32_t,
    0xbbbb6dd6 as libc::c_uint,
    0x16162c3a as libc::c_int as uint32_t,
];
static mut T2: [uint32_t; 256] = [
    0x63c6a563 as libc::c_int as uint32_t,
    0x7cf8847c as libc::c_int as uint32_t,
    0x77ee9977 as libc::c_int as uint32_t,
    0x7bf68d7b as libc::c_int as uint32_t,
    0xf2ff0df2 as libc::c_uint,
    0x6bd6bd6b as libc::c_int as uint32_t,
    0x6fdeb16f as libc::c_int as uint32_t,
    0xc59154c5 as libc::c_uint,
    0x30605030 as libc::c_int as uint32_t,
    0x1020301 as libc::c_int as uint32_t,
    0x67cea967 as libc::c_int as uint32_t,
    0x2b567d2b as libc::c_int as uint32_t,
    0xfee719fe as libc::c_uint,
    0xd7b562d7 as libc::c_uint,
    0xab4de6ab as libc::c_uint,
    0x76ec9a76 as libc::c_int as uint32_t,
    0xca8f45ca as libc::c_uint,
    0x821f9d82 as libc::c_uint,
    0xc98940c9 as libc::c_uint,
    0x7dfa877d as libc::c_int as uint32_t,
    0xfaef15fa as libc::c_uint,
    0x59b2eb59 as libc::c_int as uint32_t,
    0x478ec947 as libc::c_int as uint32_t,
    0xf0fb0bf0 as libc::c_uint,
    0xad41ecad as libc::c_uint,
    0xd4b367d4 as libc::c_uint,
    0xa25ffda2 as libc::c_uint,
    0xaf45eaaf as libc::c_uint,
    0x9c23bf9c as libc::c_uint,
    0xa453f7a4 as libc::c_uint,
    0x72e49672 as libc::c_int as uint32_t,
    0xc09b5bc0 as libc::c_uint,
    0xb775c2b7 as libc::c_uint,
    0xfde11cfd as libc::c_uint,
    0x933dae93 as libc::c_uint,
    0x264c6a26 as libc::c_int as uint32_t,
    0x366c5a36 as libc::c_int as uint32_t,
    0x3f7e413f as libc::c_int as uint32_t,
    0xf7f502f7 as libc::c_uint,
    0xcc834fcc as libc::c_uint,
    0x34685c34 as libc::c_int as uint32_t,
    0xa551f4a5 as libc::c_uint,
    0xe5d134e5 as libc::c_uint,
    0xf1f908f1 as libc::c_uint,
    0x71e29371 as libc::c_int as uint32_t,
    0xd8ab73d8 as libc::c_uint,
    0x31625331 as libc::c_int as uint32_t,
    0x152a3f15 as libc::c_int as uint32_t,
    0x4080c04 as libc::c_int as uint32_t,
    0xc79552c7 as libc::c_uint,
    0x23466523 as libc::c_int as uint32_t,
    0xc39d5ec3 as libc::c_uint,
    0x18302818 as libc::c_int as uint32_t,
    0x9637a196 as libc::c_uint,
    0x50a0f05 as libc::c_int as uint32_t,
    0x9a2fb59a as libc::c_uint,
    0x70e0907 as libc::c_int as uint32_t,
    0x12243612 as libc::c_int as uint32_t,
    0x801b9b80 as libc::c_uint,
    0xe2df3de2 as libc::c_uint,
    0xebcd26eb as libc::c_uint,
    0x274e6927 as libc::c_int as uint32_t,
    0xb27fcdb2 as libc::c_uint,
    0x75ea9f75 as libc::c_int as uint32_t,
    0x9121b09 as libc::c_int as uint32_t,
    0x831d9e83 as libc::c_uint,
    0x2c58742c as libc::c_int as uint32_t,
    0x1a342e1a as libc::c_int as uint32_t,
    0x1b362d1b as libc::c_int as uint32_t,
    0x6edcb26e as libc::c_int as uint32_t,
    0x5ab4ee5a as libc::c_int as uint32_t,
    0xa05bfba0 as libc::c_uint,
    0x52a4f652 as libc::c_int as uint32_t,
    0x3b764d3b as libc::c_int as uint32_t,
    0xd6b761d6 as libc::c_uint,
    0xb37dceb3 as libc::c_uint,
    0x29527b29 as libc::c_int as uint32_t,
    0xe3dd3ee3 as libc::c_uint,
    0x2f5e712f as libc::c_int as uint32_t,
    0x84139784 as libc::c_uint,
    0x53a6f553 as libc::c_int as uint32_t,
    0xd1b968d1 as libc::c_uint,
    0 as libc::c_int as uint32_t,
    0xedc12ced as libc::c_uint,
    0x20406020 as libc::c_int as uint32_t,
    0xfce31ffc as libc::c_uint,
    0xb179c8b1 as libc::c_uint,
    0x5bb6ed5b as libc::c_int as uint32_t,
    0x6ad4be6a as libc::c_int as uint32_t,
    0xcb8d46cb as libc::c_uint,
    0xbe67d9be as libc::c_uint,
    0x39724b39 as libc::c_int as uint32_t,
    0x4a94de4a as libc::c_int as uint32_t,
    0x4c98d44c as libc::c_int as uint32_t,
    0x58b0e858 as libc::c_int as uint32_t,
    0xcf854acf as libc::c_uint,
    0xd0bb6bd0 as libc::c_uint,
    0xefc52aef as libc::c_uint,
    0xaa4fe5aa as libc::c_uint,
    0xfbed16fb as libc::c_uint,
    0x4386c543 as libc::c_int as uint32_t,
    0x4d9ad74d as libc::c_int as uint32_t,
    0x33665533 as libc::c_int as uint32_t,
    0x85119485 as libc::c_uint,
    0x458acf45 as libc::c_int as uint32_t,
    0xf9e910f9 as libc::c_uint,
    0x2040602 as libc::c_int as uint32_t,
    0x7ffe817f as libc::c_int as uint32_t,
    0x50a0f050 as libc::c_int as uint32_t,
    0x3c78443c as libc::c_int as uint32_t,
    0x9f25ba9f as libc::c_uint,
    0xa84be3a8 as libc::c_uint,
    0x51a2f351 as libc::c_int as uint32_t,
    0xa35dfea3 as libc::c_uint,
    0x4080c040 as libc::c_int as uint32_t,
    0x8f058a8f as libc::c_uint,
    0x923fad92 as libc::c_uint,
    0x9d21bc9d as libc::c_uint,
    0x38704838 as libc::c_int as uint32_t,
    0xf5f104f5 as libc::c_uint,
    0xbc63dfbc as libc::c_uint,
    0xb677c1b6 as libc::c_uint,
    0xdaaf75da as libc::c_uint,
    0x21426321 as libc::c_int as uint32_t,
    0x10203010 as libc::c_int as uint32_t,
    0xffe51aff as libc::c_uint,
    0xf3fd0ef3 as libc::c_uint,
    0xd2bf6dd2 as libc::c_uint,
    0xcd814ccd as libc::c_uint,
    0xc18140c as libc::c_int as uint32_t,
    0x13263513 as libc::c_int as uint32_t,
    0xecc32fec as libc::c_uint,
    0x5fbee15f as libc::c_int as uint32_t,
    0x9735a297 as libc::c_uint,
    0x4488cc44 as libc::c_int as uint32_t,
    0x172e3917 as libc::c_int as uint32_t,
    0xc49357c4 as libc::c_uint,
    0xa755f2a7 as libc::c_uint,
    0x7efc827e as libc::c_int as uint32_t,
    0x3d7a473d as libc::c_int as uint32_t,
    0x64c8ac64 as libc::c_int as uint32_t,
    0x5dbae75d as libc::c_int as uint32_t,
    0x19322b19 as libc::c_int as uint32_t,
    0x73e69573 as libc::c_int as uint32_t,
    0x60c0a060 as libc::c_int as uint32_t,
    0x81199881 as libc::c_uint,
    0x4f9ed14f as libc::c_int as uint32_t,
    0xdca37fdc as libc::c_uint,
    0x22446622 as libc::c_int as uint32_t,
    0x2a547e2a as libc::c_int as uint32_t,
    0x903bab90 as libc::c_uint,
    0x880b8388 as libc::c_uint,
    0x468cca46 as libc::c_int as uint32_t,
    0xeec729ee as libc::c_uint,
    0xb86bd3b8 as libc::c_uint,
    0x14283c14 as libc::c_int as uint32_t,
    0xdea779de as libc::c_uint,
    0x5ebce25e as libc::c_int as uint32_t,
    0xb161d0b as libc::c_int as uint32_t,
    0xdbad76db as libc::c_uint,
    0xe0db3be0 as libc::c_uint,
    0x32645632 as libc::c_int as uint32_t,
    0x3a744e3a as libc::c_int as uint32_t,
    0xa141e0a as libc::c_int as uint32_t,
    0x4992db49 as libc::c_int as uint32_t,
    0x60c0a06 as libc::c_int as uint32_t,
    0x24486c24 as libc::c_int as uint32_t,
    0x5cb8e45c as libc::c_int as uint32_t,
    0xc29f5dc2 as libc::c_uint,
    0xd3bd6ed3 as libc::c_uint,
    0xac43efac as libc::c_uint,
    0x62c4a662 as libc::c_int as uint32_t,
    0x9139a891 as libc::c_uint,
    0x9531a495 as libc::c_uint,
    0xe4d337e4 as libc::c_uint,
    0x79f28b79 as libc::c_int as uint32_t,
    0xe7d532e7 as libc::c_uint,
    0xc88b43c8 as libc::c_uint,
    0x376e5937 as libc::c_int as uint32_t,
    0x6ddab76d as libc::c_int as uint32_t,
    0x8d018c8d as libc::c_uint,
    0xd5b164d5 as libc::c_uint,
    0x4e9cd24e as libc::c_int as uint32_t,
    0xa949e0a9 as libc::c_uint,
    0x6cd8b46c as libc::c_int as uint32_t,
    0x56acfa56 as libc::c_int as uint32_t,
    0xf4f307f4 as libc::c_uint,
    0xeacf25ea as libc::c_uint,
    0x65caaf65 as libc::c_int as uint32_t,
    0x7af48e7a as libc::c_int as uint32_t,
    0xae47e9ae as libc::c_uint,
    0x8101808 as libc::c_int as uint32_t,
    0xba6fd5ba as libc::c_uint,
    0x78f08878 as libc::c_int as uint32_t,
    0x254a6f25 as libc::c_int as uint32_t,
    0x2e5c722e as libc::c_int as uint32_t,
    0x1c38241c as libc::c_int as uint32_t,
    0xa657f1a6 as libc::c_uint,
    0xb473c7b4 as libc::c_uint,
    0xc69751c6 as libc::c_uint,
    0xe8cb23e8 as libc::c_uint,
    0xdda17cdd as libc::c_uint,
    0x74e89c74 as libc::c_int as uint32_t,
    0x1f3e211f as libc::c_int as uint32_t,
    0x4b96dd4b as libc::c_int as uint32_t,
    0xbd61dcbd as libc::c_uint,
    0x8b0d868b as libc::c_uint,
    0x8a0f858a as libc::c_uint,
    0x70e09070 as libc::c_int as uint32_t,
    0x3e7c423e as libc::c_int as uint32_t,
    0xb571c4b5 as libc::c_uint,
    0x66ccaa66 as libc::c_int as uint32_t,
    0x4890d848 as libc::c_int as uint32_t,
    0x3060503 as libc::c_int as uint32_t,
    0xf6f701f6 as libc::c_uint,
    0xe1c120e as libc::c_int as uint32_t,
    0x61c2a361 as libc::c_int as uint32_t,
    0x356a5f35 as libc::c_int as uint32_t,
    0x57aef957 as libc::c_int as uint32_t,
    0xb969d0b9 as libc::c_uint,
    0x86179186 as libc::c_uint,
    0xc19958c1 as libc::c_uint,
    0x1d3a271d as libc::c_int as uint32_t,
    0x9e27b99e as libc::c_uint,
    0xe1d938e1 as libc::c_uint,
    0xf8eb13f8 as libc::c_uint,
    0x982bb398 as libc::c_uint,
    0x11223311 as libc::c_int as uint32_t,
    0x69d2bb69 as libc::c_int as uint32_t,
    0xd9a970d9 as libc::c_uint,
    0x8e07898e as libc::c_uint,
    0x9433a794 as libc::c_uint,
    0x9b2db69b as libc::c_uint,
    0x1e3c221e as libc::c_int as uint32_t,
    0x87159287 as libc::c_uint,
    0xe9c920e9 as libc::c_uint,
    0xce8749ce as libc::c_uint,
    0x55aaff55 as libc::c_int as uint32_t,
    0x28507828 as libc::c_int as uint32_t,
    0xdfa57adf as libc::c_uint,
    0x8c038f8c as libc::c_uint,
    0xa159f8a1 as libc::c_uint,
    0x89098089 as libc::c_uint,
    0xd1a170d as libc::c_int as uint32_t,
    0xbf65dabf as libc::c_uint,
    0xe6d731e6 as libc::c_uint,
    0x4284c642 as libc::c_int as uint32_t,
    0x68d0b868 as libc::c_int as uint32_t,
    0x4182c341 as libc::c_int as uint32_t,
    0x9929b099 as libc::c_uint,
    0x2d5a772d as libc::c_int as uint32_t,
    0xf1e110f as libc::c_int as uint32_t,
    0xb07bcbb0 as libc::c_uint,
    0x54a8fc54 as libc::c_int as uint32_t,
    0xbb6dd6bb as libc::c_uint,
    0x162c3a16 as libc::c_int as uint32_t,
];
static mut T3: [uint32_t; 256] = [
    0xc6a56363 as libc::c_uint,
    0xf8847c7c as libc::c_uint,
    0xee997777 as libc::c_uint,
    0xf68d7b7b as libc::c_uint,
    0xff0df2f2 as libc::c_uint,
    0xd6bd6b6b as libc::c_uint,
    0xdeb16f6f as libc::c_uint,
    0x9154c5c5 as libc::c_uint,
    0x60503030 as libc::c_int as uint32_t,
    0x2030101 as libc::c_int as uint32_t,
    0xcea96767 as libc::c_uint,
    0x567d2b2b as libc::c_int as uint32_t,
    0xe719fefe as libc::c_uint,
    0xb562d7d7 as libc::c_uint,
    0x4de6abab as libc::c_int as uint32_t,
    0xec9a7676 as libc::c_uint,
    0x8f45caca as libc::c_uint,
    0x1f9d8282 as libc::c_int as uint32_t,
    0x8940c9c9 as libc::c_uint,
    0xfa877d7d as libc::c_uint,
    0xef15fafa as libc::c_uint,
    0xb2eb5959 as libc::c_uint,
    0x8ec94747 as libc::c_uint,
    0xfb0bf0f0 as libc::c_uint,
    0x41ecadad as libc::c_int as uint32_t,
    0xb367d4d4 as libc::c_uint,
    0x5ffda2a2 as libc::c_int as uint32_t,
    0x45eaafaf as libc::c_int as uint32_t,
    0x23bf9c9c as libc::c_int as uint32_t,
    0x53f7a4a4 as libc::c_int as uint32_t,
    0xe4967272 as libc::c_uint,
    0x9b5bc0c0 as libc::c_uint,
    0x75c2b7b7 as libc::c_int as uint32_t,
    0xe11cfdfd as libc::c_uint,
    0x3dae9393 as libc::c_int as uint32_t,
    0x4c6a2626 as libc::c_int as uint32_t,
    0x6c5a3636 as libc::c_int as uint32_t,
    0x7e413f3f as libc::c_int as uint32_t,
    0xf502f7f7 as libc::c_uint,
    0x834fcccc as libc::c_uint,
    0x685c3434 as libc::c_int as uint32_t,
    0x51f4a5a5 as libc::c_int as uint32_t,
    0xd134e5e5 as libc::c_uint,
    0xf908f1f1 as libc::c_uint,
    0xe2937171 as libc::c_uint,
    0xab73d8d8 as libc::c_uint,
    0x62533131 as libc::c_int as uint32_t,
    0x2a3f1515 as libc::c_int as uint32_t,
    0x80c0404 as libc::c_int as uint32_t,
    0x9552c7c7 as libc::c_uint,
    0x46652323 as libc::c_int as uint32_t,
    0x9d5ec3c3 as libc::c_uint,
    0x30281818 as libc::c_int as uint32_t,
    0x37a19696 as libc::c_int as uint32_t,
    0xa0f0505 as libc::c_int as uint32_t,
    0x2fb59a9a as libc::c_int as uint32_t,
    0xe090707 as libc::c_int as uint32_t,
    0x24361212 as libc::c_int as uint32_t,
    0x1b9b8080 as libc::c_int as uint32_t,
    0xdf3de2e2 as libc::c_uint,
    0xcd26ebeb as libc::c_uint,
    0x4e692727 as libc::c_int as uint32_t,
    0x7fcdb2b2 as libc::c_int as uint32_t,
    0xea9f7575 as libc::c_uint,
    0x121b0909 as libc::c_int as uint32_t,
    0x1d9e8383 as libc::c_int as uint32_t,
    0x58742c2c as libc::c_int as uint32_t,
    0x342e1a1a as libc::c_int as uint32_t,
    0x362d1b1b as libc::c_int as uint32_t,
    0xdcb26e6e as libc::c_uint,
    0xb4ee5a5a as libc::c_uint,
    0x5bfba0a0 as libc::c_int as uint32_t,
    0xa4f65252 as libc::c_uint,
    0x764d3b3b as libc::c_int as uint32_t,
    0xb761d6d6 as libc::c_uint,
    0x7dceb3b3 as libc::c_int as uint32_t,
    0x527b2929 as libc::c_int as uint32_t,
    0xdd3ee3e3 as libc::c_uint,
    0x5e712f2f as libc::c_int as uint32_t,
    0x13978484 as libc::c_int as uint32_t,
    0xa6f55353 as libc::c_uint,
    0xb968d1d1 as libc::c_uint,
    0 as libc::c_int as uint32_t,
    0xc12ceded as libc::c_uint,
    0x40602020 as libc::c_int as uint32_t,
    0xe31ffcfc as libc::c_uint,
    0x79c8b1b1 as libc::c_int as uint32_t,
    0xb6ed5b5b as libc::c_uint,
    0xd4be6a6a as libc::c_uint,
    0x8d46cbcb as libc::c_uint,
    0x67d9bebe as libc::c_int as uint32_t,
    0x724b3939 as libc::c_int as uint32_t,
    0x94de4a4a as libc::c_uint,
    0x98d44c4c as libc::c_uint,
    0xb0e85858 as libc::c_uint,
    0x854acfcf as libc::c_uint,
    0xbb6bd0d0 as libc::c_uint,
    0xc52aefef as libc::c_uint,
    0x4fe5aaaa as libc::c_int as uint32_t,
    0xed16fbfb as libc::c_uint,
    0x86c54343 as libc::c_uint,
    0x9ad74d4d as libc::c_uint,
    0x66553333 as libc::c_int as uint32_t,
    0x11948585 as libc::c_int as uint32_t,
    0x8acf4545 as libc::c_uint,
    0xe910f9f9 as libc::c_uint,
    0x4060202 as libc::c_int as uint32_t,
    0xfe817f7f as libc::c_uint,
    0xa0f05050 as libc::c_uint,
    0x78443c3c as libc::c_int as uint32_t,
    0x25ba9f9f as libc::c_int as uint32_t,
    0x4be3a8a8 as libc::c_int as uint32_t,
    0xa2f35151 as libc::c_uint,
    0x5dfea3a3 as libc::c_int as uint32_t,
    0x80c04040 as libc::c_uint,
    0x58a8f8f as libc::c_int as uint32_t,
    0x3fad9292 as libc::c_int as uint32_t,
    0x21bc9d9d as libc::c_int as uint32_t,
    0x70483838 as libc::c_int as uint32_t,
    0xf104f5f5 as libc::c_uint,
    0x63dfbcbc as libc::c_int as uint32_t,
    0x77c1b6b6 as libc::c_int as uint32_t,
    0xaf75dada as libc::c_uint,
    0x42632121 as libc::c_int as uint32_t,
    0x20301010 as libc::c_int as uint32_t,
    0xe51affff as libc::c_uint,
    0xfd0ef3f3 as libc::c_uint,
    0xbf6dd2d2 as libc::c_uint,
    0x814ccdcd as libc::c_uint,
    0x18140c0c as libc::c_int as uint32_t,
    0x26351313 as libc::c_int as uint32_t,
    0xc32fecec as libc::c_uint,
    0xbee15f5f as libc::c_uint,
    0x35a29797 as libc::c_int as uint32_t,
    0x88cc4444 as libc::c_uint,
    0x2e391717 as libc::c_int as uint32_t,
    0x9357c4c4 as libc::c_uint,
    0x55f2a7a7 as libc::c_int as uint32_t,
    0xfc827e7e as libc::c_uint,
    0x7a473d3d as libc::c_int as uint32_t,
    0xc8ac6464 as libc::c_uint,
    0xbae75d5d as libc::c_uint,
    0x322b1919 as libc::c_int as uint32_t,
    0xe6957373 as libc::c_uint,
    0xc0a06060 as libc::c_uint,
    0x19988181 as libc::c_int as uint32_t,
    0x9ed14f4f as libc::c_uint,
    0xa37fdcdc as libc::c_uint,
    0x44662222 as libc::c_int as uint32_t,
    0x547e2a2a as libc::c_int as uint32_t,
    0x3bab9090 as libc::c_int as uint32_t,
    0xb838888 as libc::c_int as uint32_t,
    0x8cca4646 as libc::c_uint,
    0xc729eeee as libc::c_uint,
    0x6bd3b8b8 as libc::c_int as uint32_t,
    0x283c1414 as libc::c_int as uint32_t,
    0xa779dede as libc::c_uint,
    0xbce25e5e as libc::c_uint,
    0x161d0b0b as libc::c_int as uint32_t,
    0xad76dbdb as libc::c_uint,
    0xdb3be0e0 as libc::c_uint,
    0x64563232 as libc::c_int as uint32_t,
    0x744e3a3a as libc::c_int as uint32_t,
    0x141e0a0a as libc::c_int as uint32_t,
    0x92db4949 as libc::c_uint,
    0xc0a0606 as libc::c_int as uint32_t,
    0x486c2424 as libc::c_int as uint32_t,
    0xb8e45c5c as libc::c_uint,
    0x9f5dc2c2 as libc::c_uint,
    0xbd6ed3d3 as libc::c_uint,
    0x43efacac as libc::c_int as uint32_t,
    0xc4a66262 as libc::c_uint,
    0x39a89191 as libc::c_int as uint32_t,
    0x31a49595 as libc::c_int as uint32_t,
    0xd337e4e4 as libc::c_uint,
    0xf28b7979 as libc::c_uint,
    0xd532e7e7 as libc::c_uint,
    0x8b43c8c8 as libc::c_uint,
    0x6e593737 as libc::c_int as uint32_t,
    0xdab76d6d as libc::c_uint,
    0x18c8d8d as libc::c_int as uint32_t,
    0xb164d5d5 as libc::c_uint,
    0x9cd24e4e as libc::c_uint,
    0x49e0a9a9 as libc::c_int as uint32_t,
    0xd8b46c6c as libc::c_uint,
    0xacfa5656 as libc::c_uint,
    0xf307f4f4 as libc::c_uint,
    0xcf25eaea as libc::c_uint,
    0xcaaf6565 as libc::c_uint,
    0xf48e7a7a as libc::c_uint,
    0x47e9aeae as libc::c_int as uint32_t,
    0x10180808 as libc::c_int as uint32_t,
    0x6fd5baba as libc::c_int as uint32_t,
    0xf0887878 as libc::c_uint,
    0x4a6f2525 as libc::c_int as uint32_t,
    0x5c722e2e as libc::c_int as uint32_t,
    0x38241c1c as libc::c_int as uint32_t,
    0x57f1a6a6 as libc::c_int as uint32_t,
    0x73c7b4b4 as libc::c_int as uint32_t,
    0x9751c6c6 as libc::c_uint,
    0xcb23e8e8 as libc::c_uint,
    0xa17cdddd as libc::c_uint,
    0xe89c7474 as libc::c_uint,
    0x3e211f1f as libc::c_int as uint32_t,
    0x96dd4b4b as libc::c_uint,
    0x61dcbdbd as libc::c_int as uint32_t,
    0xd868b8b as libc::c_int as uint32_t,
    0xf858a8a as libc::c_int as uint32_t,
    0xe0907070 as libc::c_uint,
    0x7c423e3e as libc::c_int as uint32_t,
    0x71c4b5b5 as libc::c_int as uint32_t,
    0xccaa6666 as libc::c_uint,
    0x90d84848 as libc::c_uint,
    0x6050303 as libc::c_int as uint32_t,
    0xf701f6f6 as libc::c_uint,
    0x1c120e0e as libc::c_int as uint32_t,
    0xc2a36161 as libc::c_uint,
    0x6a5f3535 as libc::c_int as uint32_t,
    0xaef95757 as libc::c_uint,
    0x69d0b9b9 as libc::c_int as uint32_t,
    0x17918686 as libc::c_int as uint32_t,
    0x9958c1c1 as libc::c_uint,
    0x3a271d1d as libc::c_int as uint32_t,
    0x27b99e9e as libc::c_int as uint32_t,
    0xd938e1e1 as libc::c_uint,
    0xeb13f8f8 as libc::c_uint,
    0x2bb39898 as libc::c_int as uint32_t,
    0x22331111 as libc::c_int as uint32_t,
    0xd2bb6969 as libc::c_uint,
    0xa970d9d9 as libc::c_uint,
    0x7898e8e as libc::c_int as uint32_t,
    0x33a79494 as libc::c_int as uint32_t,
    0x2db69b9b as libc::c_int as uint32_t,
    0x3c221e1e as libc::c_int as uint32_t,
    0x15928787 as libc::c_int as uint32_t,
    0xc920e9e9 as libc::c_uint,
    0x8749cece as libc::c_uint,
    0xaaff5555 as libc::c_uint,
    0x50782828 as libc::c_int as uint32_t,
    0xa57adfdf as libc::c_uint,
    0x38f8c8c as libc::c_int as uint32_t,
    0x59f8a1a1 as libc::c_int as uint32_t,
    0x9808989 as libc::c_int as uint32_t,
    0x1a170d0d as libc::c_int as uint32_t,
    0x65dabfbf as libc::c_int as uint32_t,
    0xd731e6e6 as libc::c_uint,
    0x84c64242 as libc::c_uint,
    0xd0b86868 as libc::c_uint,
    0x82c34141 as libc::c_uint,
    0x29b09999 as libc::c_int as uint32_t,
    0x5a772d2d as libc::c_int as uint32_t,
    0x1e110f0f as libc::c_int as uint32_t,
    0x7bcbb0b0 as libc::c_int as uint32_t,
    0xa8fc5454 as libc::c_uint,
    0x6dd6bbbb as libc::c_int as uint32_t,
    0x2c3a1616 as libc::c_int as uint32_t,
];
static mut U0: [uint32_t; 256] = [
    0x50a7f451 as libc::c_int as uint32_t,
    0x5365417e as libc::c_int as uint32_t,
    0xc3a4171a as libc::c_uint,
    0x965e273a as libc::c_uint,
    0xcb6bab3b as libc::c_uint,
    0xf1459d1f as libc::c_uint,
    0xab58faac as libc::c_uint,
    0x9303e34b as libc::c_uint,
    0x55fa3020 as libc::c_int as uint32_t,
    0xf66d76ad as libc::c_uint,
    0x9176cc88 as libc::c_uint,
    0x254c02f5 as libc::c_int as uint32_t,
    0xfcd7e54f as libc::c_uint,
    0xd7cb2ac5 as libc::c_uint,
    0x80443526 as libc::c_uint,
    0x8fa362b5 as libc::c_uint,
    0x495ab1de as libc::c_int as uint32_t,
    0x671bba25 as libc::c_int as uint32_t,
    0x980eea45 as libc::c_uint,
    0xe1c0fe5d as libc::c_uint,
    0x2752fc3 as libc::c_int as uint32_t,
    0x12f04c81 as libc::c_int as uint32_t,
    0xa397468d as libc::c_uint,
    0xc6f9d36b as libc::c_uint,
    0xe75f8f03 as libc::c_uint,
    0x959c9215 as libc::c_uint,
    0xeb7a6dbf as libc::c_uint,
    0xda595295 as libc::c_uint,
    0x2d83bed4 as libc::c_int as uint32_t,
    0xd3217458 as libc::c_uint,
    0x2969e049 as libc::c_int as uint32_t,
    0x44c8c98e as libc::c_int as uint32_t,
    0x6a89c275 as libc::c_int as uint32_t,
    0x78798ef4 as libc::c_int as uint32_t,
    0x6b3e5899 as libc::c_int as uint32_t,
    0xdd71b927 as libc::c_uint,
    0xb64fe1be as libc::c_uint,
    0x17ad88f0 as libc::c_int as uint32_t,
    0x66ac20c9 as libc::c_int as uint32_t,
    0xb43ace7d as libc::c_uint,
    0x184adf63 as libc::c_int as uint32_t,
    0x82311ae5 as libc::c_uint,
    0x60335197 as libc::c_int as uint32_t,
    0x457f5362 as libc::c_int as uint32_t,
    0xe07764b1 as libc::c_uint,
    0x84ae6bbb as libc::c_uint,
    0x1ca081fe as libc::c_int as uint32_t,
    0x942b08f9 as libc::c_uint,
    0x58684870 as libc::c_int as uint32_t,
    0x19fd458f as libc::c_int as uint32_t,
    0x876cde94 as libc::c_uint,
    0xb7f87b52 as libc::c_uint,
    0x23d373ab as libc::c_int as uint32_t,
    0xe2024b72 as libc::c_uint,
    0x578f1fe3 as libc::c_int as uint32_t,
    0x2aab5566 as libc::c_int as uint32_t,
    0x728ebb2 as libc::c_int as uint32_t,
    0x3c2b52f as libc::c_int as uint32_t,
    0x9a7bc586 as libc::c_uint,
    0xa50837d3 as libc::c_uint,
    0xf2872830 as libc::c_uint,
    0xb2a5bf23 as libc::c_uint,
    0xba6a0302 as libc::c_uint,
    0x5c8216ed as libc::c_int as uint32_t,
    0x2b1ccf8a as libc::c_int as uint32_t,
    0x92b479a7 as libc::c_uint,
    0xf0f207f3 as libc::c_uint,
    0xa1e2694e as libc::c_uint,
    0xcdf4da65 as libc::c_uint,
    0xd5be0506 as libc::c_uint,
    0x1f6234d1 as libc::c_int as uint32_t,
    0x8afea6c4 as libc::c_uint,
    0x9d532e34 as libc::c_uint,
    0xa055f3a2 as libc::c_uint,
    0x32e18a05 as libc::c_int as uint32_t,
    0x75ebf6a4 as libc::c_int as uint32_t,
    0x39ec830b as libc::c_int as uint32_t,
    0xaaef6040 as libc::c_uint,
    0x69f715e as libc::c_int as uint32_t,
    0x51106ebd as libc::c_int as uint32_t,
    0xf98a213e as libc::c_uint,
    0x3d06dd96 as libc::c_int as uint32_t,
    0xae053edd as libc::c_uint,
    0x46bde64d as libc::c_int as uint32_t,
    0xb58d5491 as libc::c_uint,
    0x55dc471 as libc::c_int as uint32_t,
    0x6fd40604 as libc::c_int as uint32_t,
    0xff155060 as libc::c_uint,
    0x24fb9819 as libc::c_int as uint32_t,
    0x97e9bdd6 as libc::c_uint,
    0xcc434089 as libc::c_uint,
    0x779ed967 as libc::c_int as uint32_t,
    0xbd42e8b0 as libc::c_uint,
    0x888b8907 as libc::c_uint,
    0x385b19e7 as libc::c_int as uint32_t,
    0xdbeec879 as libc::c_uint,
    0x470a7ca1 as libc::c_int as uint32_t,
    0xe90f427c as libc::c_uint,
    0xc91e84f8 as libc::c_uint,
    0 as libc::c_int as uint32_t,
    0x83868009 as libc::c_uint,
    0x48ed2b32 as libc::c_int as uint32_t,
    0xac70111e as libc::c_uint,
    0x4e725a6c as libc::c_int as uint32_t,
    0xfbff0efd as libc::c_uint,
    0x5638850f as libc::c_int as uint32_t,
    0x1ed5ae3d as libc::c_int as uint32_t,
    0x27392d36 as libc::c_int as uint32_t,
    0x64d90f0a as libc::c_int as uint32_t,
    0x21a65c68 as libc::c_int as uint32_t,
    0xd1545b9b as libc::c_uint,
    0x3a2e3624 as libc::c_int as uint32_t,
    0xb1670a0c as libc::c_uint,
    0xfe75793 as libc::c_int as uint32_t,
    0xd296eeb4 as libc::c_uint,
    0x9e919b1b as libc::c_uint,
    0x4fc5c080 as libc::c_int as uint32_t,
    0xa220dc61 as libc::c_uint,
    0x694b775a as libc::c_int as uint32_t,
    0x161a121c as libc::c_int as uint32_t,
    0xaba93e2 as libc::c_int as uint32_t,
    0xe52aa0c0 as libc::c_uint,
    0x43e0223c as libc::c_int as uint32_t,
    0x1d171b12 as libc::c_int as uint32_t,
    0xb0d090e as libc::c_int as uint32_t,
    0xadc78bf2 as libc::c_uint,
    0xb9a8b62d as libc::c_uint,
    0xc8a91e14 as libc::c_uint,
    0x8519f157 as libc::c_uint,
    0x4c0775af as libc::c_int as uint32_t,
    0xbbdd99ee as libc::c_uint,
    0xfd607fa3 as libc::c_uint,
    0x9f2601f7 as libc::c_uint,
    0xbcf5725c as libc::c_uint,
    0xc53b6644 as libc::c_uint,
    0x347efb5b as libc::c_int as uint32_t,
    0x7629438b as libc::c_int as uint32_t,
    0xdcc623cb as libc::c_uint,
    0x68fcedb6 as libc::c_int as uint32_t,
    0x63f1e4b8 as libc::c_int as uint32_t,
    0xcadc31d7 as libc::c_uint,
    0x10856342 as libc::c_int as uint32_t,
    0x40229713 as libc::c_int as uint32_t,
    0x2011c684 as libc::c_int as uint32_t,
    0x7d244a85 as libc::c_int as uint32_t,
    0xf83dbbd2 as libc::c_uint,
    0x1132f9ae as libc::c_int as uint32_t,
    0x6da129c7 as libc::c_int as uint32_t,
    0x4b2f9e1d as libc::c_int as uint32_t,
    0xf330b2dc as libc::c_uint,
    0xec52860d as libc::c_uint,
    0xd0e3c177 as libc::c_uint,
    0x6c16b32b as libc::c_int as uint32_t,
    0x99b970a9 as libc::c_uint,
    0xfa489411 as libc::c_uint,
    0x2264e947 as libc::c_int as uint32_t,
    0xc48cfca8 as libc::c_uint,
    0x1a3ff0a0 as libc::c_int as uint32_t,
    0xd82c7d56 as libc::c_uint,
    0xef903322 as libc::c_uint,
    0xc74e4987 as libc::c_uint,
    0xc1d138d9 as libc::c_uint,
    0xfea2ca8c as libc::c_uint,
    0x360bd498 as libc::c_int as uint32_t,
    0xcf81f5a6 as libc::c_uint,
    0x28de7aa5 as libc::c_int as uint32_t,
    0x268eb7da as libc::c_int as uint32_t,
    0xa4bfad3f as libc::c_uint,
    0xe49d3a2c as libc::c_uint,
    0xd927850 as libc::c_int as uint32_t,
    0x9bcc5f6a as libc::c_uint,
    0x62467e54 as libc::c_int as uint32_t,
    0xc2138df6 as libc::c_uint,
    0xe8b8d890 as libc::c_uint,
    0x5ef7392e as libc::c_int as uint32_t,
    0xf5afc382 as libc::c_uint,
    0xbe805d9f as libc::c_uint,
    0x7c93d069 as libc::c_int as uint32_t,
    0xa92dd56f as libc::c_uint,
    0xb31225cf as libc::c_uint,
    0x3b99acc8 as libc::c_int as uint32_t,
    0xa77d1810 as libc::c_uint,
    0x6e639ce8 as libc::c_int as uint32_t,
    0x7bbb3bdb as libc::c_int as uint32_t,
    0x97826cd as libc::c_int as uint32_t,
    0xf418596e as libc::c_uint,
    0x1b79aec as libc::c_int as uint32_t,
    0xa89a4f83 as libc::c_uint,
    0x656e95e6 as libc::c_int as uint32_t,
    0x7ee6ffaa as libc::c_int as uint32_t,
    0x8cfbc21 as libc::c_int as uint32_t,
    0xe6e815ef as libc::c_uint,
    0xd99be7ba as libc::c_uint,
    0xce366f4a as libc::c_uint,
    0xd4099fea as libc::c_uint,
    0xd67cb029 as libc::c_uint,
    0xafb2a431 as libc::c_uint,
    0x31233f2a as libc::c_int as uint32_t,
    0x3094a5c6 as libc::c_int as uint32_t,
    0xc066a235 as libc::c_uint,
    0x37bc4e74 as libc::c_int as uint32_t,
    0xa6ca82fc as libc::c_uint,
    0xb0d090e0 as libc::c_uint,
    0x15d8a733 as libc::c_int as uint32_t,
    0x4a9804f1 as libc::c_int as uint32_t,
    0xf7daec41 as libc::c_uint,
    0xe50cd7f as libc::c_int as uint32_t,
    0x2ff69117 as libc::c_int as uint32_t,
    0x8dd64d76 as libc::c_uint,
    0x4db0ef43 as libc::c_int as uint32_t,
    0x544daacc as libc::c_int as uint32_t,
    0xdf0496e4 as libc::c_uint,
    0xe3b5d19e as libc::c_uint,
    0x1b886a4c as libc::c_int as uint32_t,
    0xb81f2cc1 as libc::c_uint,
    0x7f516546 as libc::c_int as uint32_t,
    0x4ea5e9d as libc::c_int as uint32_t,
    0x5d358c01 as libc::c_int as uint32_t,
    0x737487fa as libc::c_int as uint32_t,
    0x2e410bfb as libc::c_int as uint32_t,
    0x5a1d67b3 as libc::c_int as uint32_t,
    0x52d2db92 as libc::c_int as uint32_t,
    0x335610e9 as libc::c_int as uint32_t,
    0x1347d66d as libc::c_int as uint32_t,
    0x8c61d79a as libc::c_uint,
    0x7a0ca137 as libc::c_int as uint32_t,
    0x8e14f859 as libc::c_uint,
    0x893c13eb as libc::c_uint,
    0xee27a9ce as libc::c_uint,
    0x35c961b7 as libc::c_int as uint32_t,
    0xede51ce1 as libc::c_uint,
    0x3cb1477a as libc::c_int as uint32_t,
    0x59dfd29c as libc::c_int as uint32_t,
    0x3f73f255 as libc::c_int as uint32_t,
    0x79ce1418 as libc::c_int as uint32_t,
    0xbf37c773 as libc::c_uint,
    0xeacdf753 as libc::c_uint,
    0x5baafd5f as libc::c_int as uint32_t,
    0x146f3ddf as libc::c_int as uint32_t,
    0x86db4478 as libc::c_uint,
    0x81f3afca as libc::c_uint,
    0x3ec468b9 as libc::c_int as uint32_t,
    0x2c342438 as libc::c_int as uint32_t,
    0x5f40a3c2 as libc::c_int as uint32_t,
    0x72c31d16 as libc::c_int as uint32_t,
    0xc25e2bc as libc::c_int as uint32_t,
    0x8b493c28 as libc::c_uint,
    0x41950dff as libc::c_int as uint32_t,
    0x7101a839 as libc::c_int as uint32_t,
    0xdeb30c08 as libc::c_uint,
    0x9ce4b4d8 as libc::c_uint,
    0x90c15664 as libc::c_uint,
    0x6184cb7b as libc::c_int as uint32_t,
    0x70b632d5 as libc::c_int as uint32_t,
    0x745c6c48 as libc::c_int as uint32_t,
    0x4257b8d0 as libc::c_int as uint32_t,
];
static mut U1: [uint32_t; 256] = [
    0xa7f45150 as libc::c_uint,
    0x65417e53 as libc::c_int as uint32_t,
    0xa4171ac3 as libc::c_uint,
    0x5e273a96 as libc::c_int as uint32_t,
    0x6bab3bcb as libc::c_int as uint32_t,
    0x459d1ff1 as libc::c_int as uint32_t,
    0x58faacab as libc::c_int as uint32_t,
    0x3e34b93 as libc::c_int as uint32_t,
    0xfa302055 as libc::c_uint,
    0x6d76adf6 as libc::c_int as uint32_t,
    0x76cc8891 as libc::c_int as uint32_t,
    0x4c02f525 as libc::c_int as uint32_t,
    0xd7e54ffc as libc::c_uint,
    0xcb2ac5d7 as libc::c_uint,
    0x44352680 as libc::c_int as uint32_t,
    0xa362b58f as libc::c_uint,
    0x5ab1de49 as libc::c_int as uint32_t,
    0x1bba2567 as libc::c_int as uint32_t,
    0xeea4598 as libc::c_int as uint32_t,
    0xc0fe5de1 as libc::c_uint,
    0x752fc302 as libc::c_int as uint32_t,
    0xf04c8112 as libc::c_uint,
    0x97468da3 as libc::c_uint,
    0xf9d36bc6 as libc::c_uint,
    0x5f8f03e7 as libc::c_int as uint32_t,
    0x9c921595 as libc::c_uint,
    0x7a6dbfeb as libc::c_int as uint32_t,
    0x595295da as libc::c_int as uint32_t,
    0x83bed42d as libc::c_uint,
    0x217458d3 as libc::c_int as uint32_t,
    0x69e04929 as libc::c_int as uint32_t,
    0xc8c98e44 as libc::c_uint,
    0x89c2756a as libc::c_uint,
    0x798ef478 as libc::c_int as uint32_t,
    0x3e58996b as libc::c_int as uint32_t,
    0x71b927dd as libc::c_int as uint32_t,
    0x4fe1beb6 as libc::c_int as uint32_t,
    0xad88f017 as libc::c_uint,
    0xac20c966 as libc::c_uint,
    0x3ace7db4 as libc::c_int as uint32_t,
    0x4adf6318 as libc::c_int as uint32_t,
    0x311ae582 as libc::c_int as uint32_t,
    0x33519760 as libc::c_int as uint32_t,
    0x7f536245 as libc::c_int as uint32_t,
    0x7764b1e0 as libc::c_int as uint32_t,
    0xae6bbb84 as libc::c_uint,
    0xa081fe1c as libc::c_uint,
    0x2b08f994 as libc::c_int as uint32_t,
    0x68487058 as libc::c_int as uint32_t,
    0xfd458f19 as libc::c_uint,
    0x6cde9487 as libc::c_int as uint32_t,
    0xf87b52b7 as libc::c_uint,
    0xd373ab23 as libc::c_uint,
    0x24b72e2 as libc::c_int as uint32_t,
    0x8f1fe357 as libc::c_uint,
    0xab55662a as libc::c_uint,
    0x28ebb207 as libc::c_int as uint32_t,
    0xc2b52f03 as libc::c_uint,
    0x7bc5869a as libc::c_int as uint32_t,
    0x837d3a5 as libc::c_int as uint32_t,
    0x872830f2 as libc::c_uint,
    0xa5bf23b2 as libc::c_uint,
    0x6a0302ba as libc::c_int as uint32_t,
    0x8216ed5c as libc::c_uint,
    0x1ccf8a2b as libc::c_int as uint32_t,
    0xb479a792 as libc::c_uint,
    0xf207f3f0 as libc::c_uint,
    0xe2694ea1 as libc::c_uint,
    0xf4da65cd as libc::c_uint,
    0xbe0506d5 as libc::c_uint,
    0x6234d11f as libc::c_int as uint32_t,
    0xfea6c48a as libc::c_uint,
    0x532e349d as libc::c_int as uint32_t,
    0x55f3a2a0 as libc::c_int as uint32_t,
    0xe18a0532 as libc::c_uint,
    0xebf6a475 as libc::c_uint,
    0xec830b39 as libc::c_uint,
    0xef6040aa as libc::c_uint,
    0x9f715e06 as libc::c_uint,
    0x106ebd51 as libc::c_int as uint32_t,
    0x8a213ef9 as libc::c_uint,
    0x6dd963d as libc::c_int as uint32_t,
    0x53eddae as libc::c_int as uint32_t,
    0xbde64d46 as libc::c_uint,
    0x8d5491b5 as libc::c_uint,
    0x5dc47105 as libc::c_int as uint32_t,
    0xd406046f as libc::c_uint,
    0x155060ff as libc::c_int as uint32_t,
    0xfb981924 as libc::c_uint,
    0xe9bdd697 as libc::c_uint,
    0x434089cc as libc::c_int as uint32_t,
    0x9ed96777 as libc::c_uint,
    0x42e8b0bd as libc::c_int as uint32_t,
    0x8b890788 as libc::c_uint,
    0x5b19e738 as libc::c_int as uint32_t,
    0xeec879db as libc::c_uint,
    0xa7ca147 as libc::c_int as uint32_t,
    0xf427ce9 as libc::c_int as uint32_t,
    0x1e84f8c9 as libc::c_int as uint32_t,
    0 as libc::c_int as uint32_t,
    0x86800983 as libc::c_uint,
    0xed2b3248 as libc::c_uint,
    0x70111eac as libc::c_int as uint32_t,
    0x725a6c4e as libc::c_int as uint32_t,
    0xff0efdfb as libc::c_uint,
    0x38850f56 as libc::c_int as uint32_t,
    0xd5ae3d1e as libc::c_uint,
    0x392d3627 as libc::c_int as uint32_t,
    0xd90f0a64 as libc::c_uint,
    0xa65c6821 as libc::c_uint,
    0x545b9bd1 as libc::c_int as uint32_t,
    0x2e36243a as libc::c_int as uint32_t,
    0x670a0cb1 as libc::c_int as uint32_t,
    0xe757930f as libc::c_uint,
    0x96eeb4d2 as libc::c_uint,
    0x919b1b9e as libc::c_uint,
    0xc5c0804f as libc::c_uint,
    0x20dc61a2 as libc::c_int as uint32_t,
    0x4b775a69 as libc::c_int as uint32_t,
    0x1a121c16 as libc::c_int as uint32_t,
    0xba93e20a as libc::c_uint,
    0x2aa0c0e5 as libc::c_int as uint32_t,
    0xe0223c43 as libc::c_uint,
    0x171b121d as libc::c_int as uint32_t,
    0xd090e0b as libc::c_int as uint32_t,
    0xc78bf2ad as libc::c_uint,
    0xa8b62db9 as libc::c_uint,
    0xa91e14c8 as libc::c_uint,
    0x19f15785 as libc::c_int as uint32_t,
    0x775af4c as libc::c_int as uint32_t,
    0xdd99eebb as libc::c_uint,
    0x607fa3fd as libc::c_int as uint32_t,
    0x2601f79f as libc::c_int as uint32_t,
    0xf5725cbc as libc::c_uint,
    0x3b6644c5 as libc::c_int as uint32_t,
    0x7efb5b34 as libc::c_int as uint32_t,
    0x29438b76 as libc::c_int as uint32_t,
    0xc623cbdc as libc::c_uint,
    0xfcedb668 as libc::c_uint,
    0xf1e4b863 as libc::c_uint,
    0xdc31d7ca as libc::c_uint,
    0x85634210 as libc::c_uint,
    0x22971340 as libc::c_int as uint32_t,
    0x11c68420 as libc::c_int as uint32_t,
    0x244a857d as libc::c_int as uint32_t,
    0x3dbbd2f8 as libc::c_int as uint32_t,
    0x32f9ae11 as libc::c_int as uint32_t,
    0xa129c76d as libc::c_uint,
    0x2f9e1d4b as libc::c_int as uint32_t,
    0x30b2dcf3 as libc::c_int as uint32_t,
    0x52860dec as libc::c_int as uint32_t,
    0xe3c177d0 as libc::c_uint,
    0x16b32b6c as libc::c_int as uint32_t,
    0xb970a999 as libc::c_uint,
    0x489411fa as libc::c_int as uint32_t,
    0x64e94722 as libc::c_int as uint32_t,
    0x8cfca8c4 as libc::c_uint,
    0x3ff0a01a as libc::c_int as uint32_t,
    0x2c7d56d8 as libc::c_int as uint32_t,
    0x903322ef as libc::c_uint,
    0x4e4987c7 as libc::c_int as uint32_t,
    0xd138d9c1 as libc::c_uint,
    0xa2ca8cfe as libc::c_uint,
    0xbd49836 as libc::c_int as uint32_t,
    0x81f5a6cf as libc::c_uint,
    0xde7aa528 as libc::c_uint,
    0x8eb7da26 as libc::c_uint,
    0xbfad3fa4 as libc::c_uint,
    0x9d3a2ce4 as libc::c_uint,
    0x9278500d as libc::c_uint,
    0xcc5f6a9b as libc::c_uint,
    0x467e5462 as libc::c_int as uint32_t,
    0x138df6c2 as libc::c_int as uint32_t,
    0xb8d890e8 as libc::c_uint,
    0xf7392e5e as libc::c_uint,
    0xafc382f5 as libc::c_uint,
    0x805d9fbe as libc::c_uint,
    0x93d0697c as libc::c_uint,
    0x2dd56fa9 as libc::c_int as uint32_t,
    0x1225cfb3 as libc::c_int as uint32_t,
    0x99acc83b as libc::c_uint,
    0x7d1810a7 as libc::c_int as uint32_t,
    0x639ce86e as libc::c_int as uint32_t,
    0xbb3bdb7b as libc::c_uint,
    0x7826cd09 as libc::c_int as uint32_t,
    0x18596ef4 as libc::c_int as uint32_t,
    0xb79aec01 as libc::c_uint,
    0x9a4f83a8 as libc::c_uint,
    0x6e95e665 as libc::c_int as uint32_t,
    0xe6ffaa7e as libc::c_uint,
    0xcfbc2108 as libc::c_uint,
    0xe815efe6 as libc::c_uint,
    0x9be7bad9 as libc::c_uint,
    0x366f4ace as libc::c_int as uint32_t,
    0x99fead4 as libc::c_int as uint32_t,
    0x7cb029d6 as libc::c_int as uint32_t,
    0xb2a431af as libc::c_uint,
    0x233f2a31 as libc::c_int as uint32_t,
    0x94a5c630 as libc::c_uint,
    0x66a235c0 as libc::c_int as uint32_t,
    0xbc4e7437 as libc::c_uint,
    0xca82fca6 as libc::c_uint,
    0xd090e0b0 as libc::c_uint,
    0xd8a73315 as libc::c_uint,
    0x9804f14a as libc::c_uint,
    0xdaec41f7 as libc::c_uint,
    0x50cd7f0e as libc::c_int as uint32_t,
    0xf691172f as libc::c_uint,
    0xd64d768d as libc::c_uint,
    0xb0ef434d as libc::c_uint,
    0x4daacc54 as libc::c_int as uint32_t,
    0x496e4df as libc::c_int as uint32_t,
    0xb5d19ee3 as libc::c_uint,
    0x886a4c1b as libc::c_uint,
    0x1f2cc1b8 as libc::c_int as uint32_t,
    0x5165467f as libc::c_int as uint32_t,
    0xea5e9d04 as libc::c_uint,
    0x358c015d as libc::c_int as uint32_t,
    0x7487fa73 as libc::c_int as uint32_t,
    0x410bfb2e as libc::c_int as uint32_t,
    0x1d67b35a as libc::c_int as uint32_t,
    0xd2db9252 as libc::c_uint,
    0x5610e933 as libc::c_int as uint32_t,
    0x47d66d13 as libc::c_int as uint32_t,
    0x61d79a8c as libc::c_int as uint32_t,
    0xca1377a as libc::c_int as uint32_t,
    0x14f8598e as libc::c_int as uint32_t,
    0x3c13eb89 as libc::c_int as uint32_t,
    0x27a9ceee as libc::c_int as uint32_t,
    0xc961b735 as libc::c_uint,
    0xe51ce1ed as libc::c_uint,
    0xb1477a3c as libc::c_uint,
    0xdfd29c59 as libc::c_uint,
    0x73f2553f as libc::c_int as uint32_t,
    0xce141879 as libc::c_uint,
    0x37c773bf as libc::c_int as uint32_t,
    0xcdf753ea as libc::c_uint,
    0xaafd5f5b as libc::c_uint,
    0x6f3ddf14 as libc::c_int as uint32_t,
    0xdb447886 as libc::c_uint,
    0xf3afca81 as libc::c_uint,
    0xc468b93e as libc::c_uint,
    0x3424382c as libc::c_int as uint32_t,
    0x40a3c25f as libc::c_int as uint32_t,
    0xc31d1672 as libc::c_uint,
    0x25e2bc0c as libc::c_int as uint32_t,
    0x493c288b as libc::c_int as uint32_t,
    0x950dff41 as libc::c_uint,
    0x1a83971 as libc::c_int as uint32_t,
    0xb30c08de as libc::c_uint,
    0xe4b4d89c as libc::c_uint,
    0xc1566490 as libc::c_uint,
    0x84cb7b61 as libc::c_uint,
    0xb632d570 as libc::c_uint,
    0x5c6c4874 as libc::c_int as uint32_t,
    0x57b8d042 as libc::c_int as uint32_t,
];
static mut U2: [uint32_t; 256] = [
    0xf45150a7 as libc::c_uint,
    0x417e5365 as libc::c_int as uint32_t,
    0x171ac3a4 as libc::c_int as uint32_t,
    0x273a965e as libc::c_int as uint32_t,
    0xab3bcb6b as libc::c_uint,
    0x9d1ff145 as libc::c_uint,
    0xfaacab58 as libc::c_uint,
    0xe34b9303 as libc::c_uint,
    0x302055fa as libc::c_int as uint32_t,
    0x76adf66d as libc::c_int as uint32_t,
    0xcc889176 as libc::c_uint,
    0x2f5254c as libc::c_int as uint32_t,
    0xe54ffcd7 as libc::c_uint,
    0x2ac5d7cb as libc::c_int as uint32_t,
    0x35268044 as libc::c_int as uint32_t,
    0x62b58fa3 as libc::c_int as uint32_t,
    0xb1de495a as libc::c_uint,
    0xba25671b as libc::c_uint,
    0xea45980e as libc::c_uint,
    0xfe5de1c0 as libc::c_uint,
    0x2fc30275 as libc::c_int as uint32_t,
    0x4c8112f0 as libc::c_int as uint32_t,
    0x468da397 as libc::c_int as uint32_t,
    0xd36bc6f9 as libc::c_uint,
    0x8f03e75f as libc::c_uint,
    0x9215959c as libc::c_uint,
    0x6dbfeb7a as libc::c_int as uint32_t,
    0x5295da59 as libc::c_int as uint32_t,
    0xbed42d83 as libc::c_uint,
    0x7458d321 as libc::c_int as uint32_t,
    0xe0492969 as libc::c_uint,
    0xc98e44c8 as libc::c_uint,
    0xc2756a89 as libc::c_uint,
    0x8ef47879 as libc::c_uint,
    0x58996b3e as libc::c_int as uint32_t,
    0xb927dd71 as libc::c_uint,
    0xe1beb64f as libc::c_uint,
    0x88f017ad as libc::c_uint,
    0x20c966ac as libc::c_int as uint32_t,
    0xce7db43a as libc::c_uint,
    0xdf63184a as libc::c_uint,
    0x1ae58231 as libc::c_int as uint32_t,
    0x51976033 as libc::c_int as uint32_t,
    0x5362457f as libc::c_int as uint32_t,
    0x64b1e077 as libc::c_int as uint32_t,
    0x6bbb84ae as libc::c_int as uint32_t,
    0x81fe1ca0 as libc::c_uint,
    0x8f9942b as libc::c_int as uint32_t,
    0x48705868 as libc::c_int as uint32_t,
    0x458f19fd as libc::c_int as uint32_t,
    0xde94876c as libc::c_uint,
    0x7b52b7f8 as libc::c_int as uint32_t,
    0x73ab23d3 as libc::c_int as uint32_t,
    0x4b72e202 as libc::c_int as uint32_t,
    0x1fe3578f as libc::c_int as uint32_t,
    0x55662aab as libc::c_int as uint32_t,
    0xebb20728 as libc::c_uint,
    0xb52f03c2 as libc::c_uint,
    0xc5869a7b as libc::c_uint,
    0x37d3a508 as libc::c_int as uint32_t,
    0x2830f287 as libc::c_int as uint32_t,
    0xbf23b2a5 as libc::c_uint,
    0x302ba6a as libc::c_int as uint32_t,
    0x16ed5c82 as libc::c_int as uint32_t,
    0xcf8a2b1c as libc::c_uint,
    0x79a792b4 as libc::c_int as uint32_t,
    0x7f3f0f2 as libc::c_int as uint32_t,
    0x694ea1e2 as libc::c_int as uint32_t,
    0xda65cdf4 as libc::c_uint,
    0x506d5be as libc::c_int as uint32_t,
    0x34d11f62 as libc::c_int as uint32_t,
    0xa6c48afe as libc::c_uint,
    0x2e349d53 as libc::c_int as uint32_t,
    0xf3a2a055 as libc::c_uint,
    0x8a0532e1 as libc::c_uint,
    0xf6a475eb as libc::c_uint,
    0x830b39ec as libc::c_uint,
    0x6040aaef as libc::c_int as uint32_t,
    0x715e069f as libc::c_int as uint32_t,
    0x6ebd5110 as libc::c_int as uint32_t,
    0x213ef98a as libc::c_int as uint32_t,
    0xdd963d06 as libc::c_uint,
    0x3eddae05 as libc::c_int as uint32_t,
    0xe64d46bd as libc::c_uint,
    0x5491b58d as libc::c_int as uint32_t,
    0xc471055d as libc::c_uint,
    0x6046fd4 as libc::c_int as uint32_t,
    0x5060ff15 as libc::c_int as uint32_t,
    0x981924fb as libc::c_uint,
    0xbdd697e9 as libc::c_uint,
    0x4089cc43 as libc::c_int as uint32_t,
    0xd967779e as libc::c_uint,
    0xe8b0bd42 as libc::c_uint,
    0x8907888b as libc::c_uint,
    0x19e7385b as libc::c_int as uint32_t,
    0xc879dbee as libc::c_uint,
    0x7ca1470a as libc::c_int as uint32_t,
    0x427ce90f as libc::c_int as uint32_t,
    0x84f8c91e as libc::c_uint,
    0 as libc::c_int as uint32_t,
    0x80098386 as libc::c_uint,
    0x2b3248ed as libc::c_int as uint32_t,
    0x111eac70 as libc::c_int as uint32_t,
    0x5a6c4e72 as libc::c_int as uint32_t,
    0xefdfbff as libc::c_int as uint32_t,
    0x850f5638 as libc::c_uint,
    0xae3d1ed5 as libc::c_uint,
    0x2d362739 as libc::c_int as uint32_t,
    0xf0a64d9 as libc::c_int as uint32_t,
    0x5c6821a6 as libc::c_int as uint32_t,
    0x5b9bd154 as libc::c_int as uint32_t,
    0x36243a2e as libc::c_int as uint32_t,
    0xa0cb167 as libc::c_int as uint32_t,
    0x57930fe7 as libc::c_int as uint32_t,
    0xeeb4d296 as libc::c_uint,
    0x9b1b9e91 as libc::c_uint,
    0xc0804fc5 as libc::c_uint,
    0xdc61a220 as libc::c_uint,
    0x775a694b as libc::c_int as uint32_t,
    0x121c161a as libc::c_int as uint32_t,
    0x93e20aba as libc::c_uint,
    0xa0c0e52a as libc::c_uint,
    0x223c43e0 as libc::c_int as uint32_t,
    0x1b121d17 as libc::c_int as uint32_t,
    0x90e0b0d as libc::c_int as uint32_t,
    0x8bf2adc7 as libc::c_uint,
    0xb62db9a8 as libc::c_uint,
    0x1e14c8a9 as libc::c_int as uint32_t,
    0xf1578519 as libc::c_uint,
    0x75af4c07 as libc::c_int as uint32_t,
    0x99eebbdd as libc::c_uint,
    0x7fa3fd60 as libc::c_int as uint32_t,
    0x1f79f26 as libc::c_int as uint32_t,
    0x725cbcf5 as libc::c_int as uint32_t,
    0x6644c53b as libc::c_int as uint32_t,
    0xfb5b347e as libc::c_uint,
    0x438b7629 as libc::c_int as uint32_t,
    0x23cbdcc6 as libc::c_int as uint32_t,
    0xedb668fc as libc::c_uint,
    0xe4b863f1 as libc::c_uint,
    0x31d7cadc as libc::c_int as uint32_t,
    0x63421085 as libc::c_int as uint32_t,
    0x97134022 as libc::c_uint,
    0xc6842011 as libc::c_uint,
    0x4a857d24 as libc::c_int as uint32_t,
    0xbbd2f83d as libc::c_uint,
    0xf9ae1132 as libc::c_uint,
    0x29c76da1 as libc::c_int as uint32_t,
    0x9e1d4b2f as libc::c_uint,
    0xb2dcf330 as libc::c_uint,
    0x860dec52 as libc::c_uint,
    0xc177d0e3 as libc::c_uint,
    0xb32b6c16 as libc::c_uint,
    0x70a999b9 as libc::c_int as uint32_t,
    0x9411fa48 as libc::c_uint,
    0xe9472264 as libc::c_uint,
    0xfca8c48c as libc::c_uint,
    0xf0a01a3f as libc::c_uint,
    0x7d56d82c as libc::c_int as uint32_t,
    0x3322ef90 as libc::c_int as uint32_t,
    0x4987c74e as libc::c_int as uint32_t,
    0x38d9c1d1 as libc::c_int as uint32_t,
    0xca8cfea2 as libc::c_uint,
    0xd498360b as libc::c_uint,
    0xf5a6cf81 as libc::c_uint,
    0x7aa528de as libc::c_int as uint32_t,
    0xb7da268e as libc::c_uint,
    0xad3fa4bf as libc::c_uint,
    0x3a2ce49d as libc::c_int as uint32_t,
    0x78500d92 as libc::c_int as uint32_t,
    0x5f6a9bcc as libc::c_int as uint32_t,
    0x7e546246 as libc::c_int as uint32_t,
    0x8df6c213 as libc::c_uint,
    0xd890e8b8 as libc::c_uint,
    0x392e5ef7 as libc::c_int as uint32_t,
    0xc382f5af as libc::c_uint,
    0x5d9fbe80 as libc::c_int as uint32_t,
    0xd0697c93 as libc::c_uint,
    0xd56fa92d as libc::c_uint,
    0x25cfb312 as libc::c_int as uint32_t,
    0xacc83b99 as libc::c_uint,
    0x1810a77d as libc::c_int as uint32_t,
    0x9ce86e63 as libc::c_uint,
    0x3bdb7bbb as libc::c_int as uint32_t,
    0x26cd0978 as libc::c_int as uint32_t,
    0x596ef418 as libc::c_int as uint32_t,
    0x9aec01b7 as libc::c_uint,
    0x4f83a89a as libc::c_int as uint32_t,
    0x95e6656e as libc::c_uint,
    0xffaa7ee6 as libc::c_uint,
    0xbc2108cf as libc::c_uint,
    0x15efe6e8 as libc::c_int as uint32_t,
    0xe7bad99b as libc::c_uint,
    0x6f4ace36 as libc::c_int as uint32_t,
    0x9fead409 as libc::c_uint,
    0xb029d67c as libc::c_uint,
    0xa431afb2 as libc::c_uint,
    0x3f2a3123 as libc::c_int as uint32_t,
    0xa5c63094 as libc::c_uint,
    0xa235c066 as libc::c_uint,
    0x4e7437bc as libc::c_int as uint32_t,
    0x82fca6ca as libc::c_uint,
    0x90e0b0d0 as libc::c_uint,
    0xa73315d8 as libc::c_uint,
    0x4f14a98 as libc::c_int as uint32_t,
    0xec41f7da as libc::c_uint,
    0xcd7f0e50 as libc::c_uint,
    0x91172ff6 as libc::c_uint,
    0x4d768dd6 as libc::c_int as uint32_t,
    0xef434db0 as libc::c_uint,
    0xaacc544d as libc::c_uint,
    0x96e4df04 as libc::c_uint,
    0xd19ee3b5 as libc::c_uint,
    0x6a4c1b88 as libc::c_int as uint32_t,
    0x2cc1b81f as libc::c_int as uint32_t,
    0x65467f51 as libc::c_int as uint32_t,
    0x5e9d04ea as libc::c_int as uint32_t,
    0x8c015d35 as libc::c_uint,
    0x87fa7374 as libc::c_uint,
    0xbfb2e41 as libc::c_int as uint32_t,
    0x67b35a1d as libc::c_int as uint32_t,
    0xdb9252d2 as libc::c_uint,
    0x10e93356 as libc::c_int as uint32_t,
    0xd66d1347 as libc::c_uint,
    0xd79a8c61 as libc::c_uint,
    0xa1377a0c as libc::c_uint,
    0xf8598e14 as libc::c_uint,
    0x13eb893c as libc::c_int as uint32_t,
    0xa9ceee27 as libc::c_uint,
    0x61b735c9 as libc::c_int as uint32_t,
    0x1ce1ede5 as libc::c_int as uint32_t,
    0x477a3cb1 as libc::c_int as uint32_t,
    0xd29c59df as libc::c_uint,
    0xf2553f73 as libc::c_uint,
    0x141879ce as libc::c_int as uint32_t,
    0xc773bf37 as libc::c_uint,
    0xf753eacd as libc::c_uint,
    0xfd5f5baa as libc::c_uint,
    0x3ddf146f as libc::c_int as uint32_t,
    0x447886db as libc::c_int as uint32_t,
    0xafca81f3 as libc::c_uint,
    0x68b93ec4 as libc::c_int as uint32_t,
    0x24382c34 as libc::c_int as uint32_t,
    0xa3c25f40 as libc::c_uint,
    0x1d1672c3 as libc::c_int as uint32_t,
    0xe2bc0c25 as libc::c_uint,
    0x3c288b49 as libc::c_int as uint32_t,
    0xdff4195 as libc::c_int as uint32_t,
    0xa8397101 as libc::c_uint,
    0xc08deb3 as libc::c_int as uint32_t,
    0xb4d89ce4 as libc::c_uint,
    0x566490c1 as libc::c_int as uint32_t,
    0xcb7b6184 as libc::c_uint,
    0x32d570b6 as libc::c_int as uint32_t,
    0x6c48745c as libc::c_int as uint32_t,
    0xb8d04257 as libc::c_uint,
];
static mut U3: [uint32_t; 256] = [
    0x5150a7f4 as libc::c_int as uint32_t,
    0x7e536541 as libc::c_int as uint32_t,
    0x1ac3a417 as libc::c_int as uint32_t,
    0x3a965e27 as libc::c_int as uint32_t,
    0x3bcb6bab as libc::c_int as uint32_t,
    0x1ff1459d as libc::c_int as uint32_t,
    0xacab58fa as libc::c_uint,
    0x4b9303e3 as libc::c_int as uint32_t,
    0x2055fa30 as libc::c_int as uint32_t,
    0xadf66d76 as libc::c_uint,
    0x889176cc as libc::c_uint,
    0xf5254c02 as libc::c_uint,
    0x4ffcd7e5 as libc::c_int as uint32_t,
    0xc5d7cb2a as libc::c_uint,
    0x26804435 as libc::c_int as uint32_t,
    0xb58fa362 as libc::c_uint,
    0xde495ab1 as libc::c_uint,
    0x25671bba as libc::c_int as uint32_t,
    0x45980eea as libc::c_int as uint32_t,
    0x5de1c0fe as libc::c_int as uint32_t,
    0xc302752f as libc::c_uint,
    0x8112f04c as libc::c_uint,
    0x8da39746 as libc::c_uint,
    0x6bc6f9d3 as libc::c_int as uint32_t,
    0x3e75f8f as libc::c_int as uint32_t,
    0x15959c92 as libc::c_int as uint32_t,
    0xbfeb7a6d as libc::c_uint,
    0x95da5952 as libc::c_uint,
    0xd42d83be as libc::c_uint,
    0x58d32174 as libc::c_int as uint32_t,
    0x492969e0 as libc::c_int as uint32_t,
    0x8e44c8c9 as libc::c_uint,
    0x756a89c2 as libc::c_int as uint32_t,
    0xf478798e as libc::c_uint,
    0x996b3e58 as libc::c_uint,
    0x27dd71b9 as libc::c_int as uint32_t,
    0xbeb64fe1 as libc::c_uint,
    0xf017ad88 as libc::c_uint,
    0xc966ac20 as libc::c_uint,
    0x7db43ace as libc::c_int as uint32_t,
    0x63184adf as libc::c_int as uint32_t,
    0xe582311a as libc::c_uint,
    0x97603351 as libc::c_uint,
    0x62457f53 as libc::c_int as uint32_t,
    0xb1e07764 as libc::c_uint,
    0xbb84ae6b as libc::c_uint,
    0xfe1ca081 as libc::c_uint,
    0xf9942b08 as libc::c_uint,
    0x70586848 as libc::c_int as uint32_t,
    0x8f19fd45 as libc::c_uint,
    0x94876cde as libc::c_uint,
    0x52b7f87b as libc::c_int as uint32_t,
    0xab23d373 as libc::c_uint,
    0x72e2024b as libc::c_int as uint32_t,
    0xe3578f1f as libc::c_uint,
    0x662aab55 as libc::c_int as uint32_t,
    0xb20728eb as libc::c_uint,
    0x2f03c2b5 as libc::c_int as uint32_t,
    0x869a7bc5 as libc::c_uint,
    0xd3a50837 as libc::c_uint,
    0x30f28728 as libc::c_int as uint32_t,
    0x23b2a5bf as libc::c_int as uint32_t,
    0x2ba6a03 as libc::c_int as uint32_t,
    0xed5c8216 as libc::c_uint,
    0x8a2b1ccf as libc::c_uint,
    0xa792b479 as libc::c_uint,
    0xf3f0f207 as libc::c_uint,
    0x4ea1e269 as libc::c_int as uint32_t,
    0x65cdf4da as libc::c_int as uint32_t,
    0x6d5be05 as libc::c_int as uint32_t,
    0xd11f6234 as libc::c_uint,
    0xc48afea6 as libc::c_uint,
    0x349d532e as libc::c_int as uint32_t,
    0xa2a055f3 as libc::c_uint,
    0x532e18a as libc::c_int as uint32_t,
    0xa475ebf6 as libc::c_uint,
    0xb39ec83 as libc::c_int as uint32_t,
    0x40aaef60 as libc::c_int as uint32_t,
    0x5e069f71 as libc::c_int as uint32_t,
    0xbd51106e as libc::c_uint,
    0x3ef98a21 as libc::c_int as uint32_t,
    0x963d06dd as libc::c_uint,
    0xddae053e as libc::c_uint,
    0x4d46bde6 as libc::c_int as uint32_t,
    0x91b58d54 as libc::c_uint,
    0x71055dc4 as libc::c_int as uint32_t,
    0x46fd406 as libc::c_int as uint32_t,
    0x60ff1550 as libc::c_int as uint32_t,
    0x1924fb98 as libc::c_int as uint32_t,
    0xd697e9bd as libc::c_uint,
    0x89cc4340 as libc::c_uint,
    0x67779ed9 as libc::c_int as uint32_t,
    0xb0bd42e8 as libc::c_uint,
    0x7888b89 as libc::c_int as uint32_t,
    0xe7385b19 as libc::c_uint,
    0x79dbeec8 as libc::c_int as uint32_t,
    0xa1470a7c as libc::c_uint,
    0x7ce90f42 as libc::c_int as uint32_t,
    0xf8c91e84 as libc::c_uint,
    0 as libc::c_int as uint32_t,
    0x9838680 as libc::c_int as uint32_t,
    0x3248ed2b as libc::c_int as uint32_t,
    0x1eac7011 as libc::c_int as uint32_t,
    0x6c4e725a as libc::c_int as uint32_t,
    0xfdfbff0e as libc::c_uint,
    0xf563885 as libc::c_int as uint32_t,
    0x3d1ed5ae as libc::c_int as uint32_t,
    0x3627392d as libc::c_int as uint32_t,
    0xa64d90f as libc::c_int as uint32_t,
    0x6821a65c as libc::c_int as uint32_t,
    0x9bd1545b as libc::c_uint,
    0x243a2e36 as libc::c_int as uint32_t,
    0xcb1670a as libc::c_int as uint32_t,
    0x930fe757 as libc::c_uint,
    0xb4d296ee as libc::c_uint,
    0x1b9e919b as libc::c_int as uint32_t,
    0x804fc5c0 as libc::c_uint,
    0x61a220dc as libc::c_int as uint32_t,
    0x5a694b77 as libc::c_int as uint32_t,
    0x1c161a12 as libc::c_int as uint32_t,
    0xe20aba93 as libc::c_uint,
    0xc0e52aa0 as libc::c_uint,
    0x3c43e022 as libc::c_int as uint32_t,
    0x121d171b as libc::c_int as uint32_t,
    0xe0b0d09 as libc::c_int as uint32_t,
    0xf2adc78b as libc::c_uint,
    0x2db9a8b6 as libc::c_int as uint32_t,
    0x14c8a91e as libc::c_int as uint32_t,
    0x578519f1 as libc::c_int as uint32_t,
    0xaf4c0775 as libc::c_uint,
    0xeebbdd99 as libc::c_uint,
    0xa3fd607f as libc::c_uint,
    0xf79f2601 as libc::c_uint,
    0x5cbcf572 as libc::c_int as uint32_t,
    0x44c53b66 as libc::c_int as uint32_t,
    0x5b347efb as libc::c_int as uint32_t,
    0x8b762943 as libc::c_uint,
    0xcbdcc623 as libc::c_uint,
    0xb668fced as libc::c_uint,
    0xb863f1e4 as libc::c_uint,
    0xd7cadc31 as libc::c_uint,
    0x42108563 as libc::c_int as uint32_t,
    0x13402297 as libc::c_int as uint32_t,
    0x842011c6 as libc::c_uint,
    0x857d244a as libc::c_uint,
    0xd2f83dbb as libc::c_uint,
    0xae1132f9 as libc::c_uint,
    0xc76da129 as libc::c_uint,
    0x1d4b2f9e as libc::c_int as uint32_t,
    0xdcf330b2 as libc::c_uint,
    0xdec5286 as libc::c_int as uint32_t,
    0x77d0e3c1 as libc::c_int as uint32_t,
    0x2b6c16b3 as libc::c_int as uint32_t,
    0xa999b970 as libc::c_uint,
    0x11fa4894 as libc::c_int as uint32_t,
    0x472264e9 as libc::c_int as uint32_t,
    0xa8c48cfc as libc::c_uint,
    0xa01a3ff0 as libc::c_uint,
    0x56d82c7d as libc::c_int as uint32_t,
    0x22ef9033 as libc::c_int as uint32_t,
    0x87c74e49 as libc::c_uint,
    0xd9c1d138 as libc::c_uint,
    0x8cfea2ca as libc::c_uint,
    0x98360bd4 as libc::c_uint,
    0xa6cf81f5 as libc::c_uint,
    0xa528de7a as libc::c_uint,
    0xda268eb7 as libc::c_uint,
    0x3fa4bfad as libc::c_int as uint32_t,
    0x2ce49d3a as libc::c_int as uint32_t,
    0x500d9278 as libc::c_int as uint32_t,
    0x6a9bcc5f as libc::c_int as uint32_t,
    0x5462467e as libc::c_int as uint32_t,
    0xf6c2138d as libc::c_uint,
    0x90e8b8d8 as libc::c_uint,
    0x2e5ef739 as libc::c_int as uint32_t,
    0x82f5afc3 as libc::c_uint,
    0x9fbe805d as libc::c_uint,
    0x697c93d0 as libc::c_int as uint32_t,
    0x6fa92dd5 as libc::c_int as uint32_t,
    0xcfb31225 as libc::c_uint,
    0xc83b99ac as libc::c_uint,
    0x10a77d18 as libc::c_int as uint32_t,
    0xe86e639c as libc::c_uint,
    0xdb7bbb3b as libc::c_uint,
    0xcd097826 as libc::c_uint,
    0x6ef41859 as libc::c_int as uint32_t,
    0xec01b79a as libc::c_uint,
    0x83a89a4f as libc::c_uint,
    0xe6656e95 as libc::c_uint,
    0xaa7ee6ff as libc::c_uint,
    0x2108cfbc as libc::c_int as uint32_t,
    0xefe6e815 as libc::c_uint,
    0xbad99be7 as libc::c_uint,
    0x4ace366f as libc::c_int as uint32_t,
    0xead4099f as libc::c_uint,
    0x29d67cb0 as libc::c_int as uint32_t,
    0x31afb2a4 as libc::c_int as uint32_t,
    0x2a31233f as libc::c_int as uint32_t,
    0xc63094a5 as libc::c_uint,
    0x35c066a2 as libc::c_int as uint32_t,
    0x7437bc4e as libc::c_int as uint32_t,
    0xfca6ca82 as libc::c_uint,
    0xe0b0d090 as libc::c_uint,
    0x3315d8a7 as libc::c_int as uint32_t,
    0xf14a9804 as libc::c_uint,
    0x41f7daec as libc::c_int as uint32_t,
    0x7f0e50cd as libc::c_int as uint32_t,
    0x172ff691 as libc::c_int as uint32_t,
    0x768dd64d as libc::c_int as uint32_t,
    0x434db0ef as libc::c_int as uint32_t,
    0xcc544daa as libc::c_uint,
    0xe4df0496 as libc::c_uint,
    0x9ee3b5d1 as libc::c_uint,
    0x4c1b886a as libc::c_int as uint32_t,
    0xc1b81f2c as libc::c_uint,
    0x467f5165 as libc::c_int as uint32_t,
    0x9d04ea5e as libc::c_uint,
    0x15d358c as libc::c_int as uint32_t,
    0xfa737487 as libc::c_uint,
    0xfb2e410b as libc::c_uint,
    0xb35a1d67 as libc::c_uint,
    0x9252d2db as libc::c_uint,
    0xe9335610 as libc::c_uint,
    0x6d1347d6 as libc::c_int as uint32_t,
    0x9a8c61d7 as libc::c_uint,
    0x377a0ca1 as libc::c_int as uint32_t,
    0x598e14f8 as libc::c_int as uint32_t,
    0xeb893c13 as libc::c_uint,
    0xceee27a9 as libc::c_uint,
    0xb735c961 as libc::c_uint,
    0xe1ede51c as libc::c_uint,
    0x7a3cb147 as libc::c_int as uint32_t,
    0x9c59dfd2 as libc::c_uint,
    0x553f73f2 as libc::c_int as uint32_t,
    0x1879ce14 as libc::c_int as uint32_t,
    0x73bf37c7 as libc::c_int as uint32_t,
    0x53eacdf7 as libc::c_int as uint32_t,
    0x5f5baafd as libc::c_int as uint32_t,
    0xdf146f3d as libc::c_uint,
    0x7886db44 as libc::c_int as uint32_t,
    0xca81f3af as libc::c_uint,
    0xb93ec468 as libc::c_uint,
    0x382c3424 as libc::c_int as uint32_t,
    0xc25f40a3 as libc::c_uint,
    0x1672c31d as libc::c_int as uint32_t,
    0xbc0c25e2 as libc::c_uint,
    0x288b493c as libc::c_int as uint32_t,
    0xff41950d as libc::c_uint,
    0x397101a8 as libc::c_int as uint32_t,
    0x8deb30c as libc::c_int as uint32_t,
    0xd89ce4b4 as libc::c_uint,
    0x6490c156 as libc::c_int as uint32_t,
    0x7b6184cb as libc::c_int as uint32_t,
    0xd570b632 as libc::c_uint,
    0x48745c6c as libc::c_int as uint32_t,
    0xd04257b8 as libc::c_uint,
];
static mut aes_sbox: [uint8_t; 256] = [
    0x63 as libc::c_int as uint8_t,
    0x7c as libc::c_int as uint8_t,
    0x77 as libc::c_int as uint8_t,
    0x7b as libc::c_int as uint8_t,
    0xf2 as libc::c_int as uint8_t,
    0x6b as libc::c_int as uint8_t,
    0x6f as libc::c_int as uint8_t,
    0xc5 as libc::c_int as uint8_t,
    0x30 as libc::c_int as uint8_t,
    0x1 as libc::c_int as uint8_t,
    0x67 as libc::c_int as uint8_t,
    0x2b as libc::c_int as uint8_t,
    0xfe as libc::c_int as uint8_t,
    0xd7 as libc::c_int as uint8_t,
    0xab as libc::c_int as uint8_t,
    0x76 as libc::c_int as uint8_t,
    0xca as libc::c_int as uint8_t,
    0x82 as libc::c_int as uint8_t,
    0xc9 as libc::c_int as uint8_t,
    0x7d as libc::c_int as uint8_t,
    0xfa as libc::c_int as uint8_t,
    0x59 as libc::c_int as uint8_t,
    0x47 as libc::c_int as uint8_t,
    0xf0 as libc::c_int as uint8_t,
    0xad as libc::c_int as uint8_t,
    0xd4 as libc::c_int as uint8_t,
    0xa2 as libc::c_int as uint8_t,
    0xaf as libc::c_int as uint8_t,
    0x9c as libc::c_int as uint8_t,
    0xa4 as libc::c_int as uint8_t,
    0x72 as libc::c_int as uint8_t,
    0xc0 as libc::c_int as uint8_t,
    0xb7 as libc::c_int as uint8_t,
    0xfd as libc::c_int as uint8_t,
    0x93 as libc::c_int as uint8_t,
    0x26 as libc::c_int as uint8_t,
    0x36 as libc::c_int as uint8_t,
    0x3f as libc::c_int as uint8_t,
    0xf7 as libc::c_int as uint8_t,
    0xcc as libc::c_int as uint8_t,
    0x34 as libc::c_int as uint8_t,
    0xa5 as libc::c_int as uint8_t,
    0xe5 as libc::c_int as uint8_t,
    0xf1 as libc::c_int as uint8_t,
    0x71 as libc::c_int as uint8_t,
    0xd8 as libc::c_int as uint8_t,
    0x31 as libc::c_int as uint8_t,
    0x15 as libc::c_int as uint8_t,
    0x4 as libc::c_int as uint8_t,
    0xc7 as libc::c_int as uint8_t,
    0x23 as libc::c_int as uint8_t,
    0xc3 as libc::c_int as uint8_t,
    0x18 as libc::c_int as uint8_t,
    0x96 as libc::c_int as uint8_t,
    0x5 as libc::c_int as uint8_t,
    0x9a as libc::c_int as uint8_t,
    0x7 as libc::c_int as uint8_t,
    0x12 as libc::c_int as uint8_t,
    0x80 as libc::c_int as uint8_t,
    0xe2 as libc::c_int as uint8_t,
    0xeb as libc::c_int as uint8_t,
    0x27 as libc::c_int as uint8_t,
    0xb2 as libc::c_int as uint8_t,
    0x75 as libc::c_int as uint8_t,
    0x9 as libc::c_int as uint8_t,
    0x83 as libc::c_int as uint8_t,
    0x2c as libc::c_int as uint8_t,
    0x1a as libc::c_int as uint8_t,
    0x1b as libc::c_int as uint8_t,
    0x6e as libc::c_int as uint8_t,
    0x5a as libc::c_int as uint8_t,
    0xa0 as libc::c_int as uint8_t,
    0x52 as libc::c_int as uint8_t,
    0x3b as libc::c_int as uint8_t,
    0xd6 as libc::c_int as uint8_t,
    0xb3 as libc::c_int as uint8_t,
    0x29 as libc::c_int as uint8_t,
    0xe3 as libc::c_int as uint8_t,
    0x2f as libc::c_int as uint8_t,
    0x84 as libc::c_int as uint8_t,
    0x53 as libc::c_int as uint8_t,
    0xd1 as libc::c_int as uint8_t,
    0 as libc::c_int as uint8_t,
    0xed as libc::c_int as uint8_t,
    0x20 as libc::c_int as uint8_t,
    0xfc as libc::c_int as uint8_t,
    0xb1 as libc::c_int as uint8_t,
    0x5b as libc::c_int as uint8_t,
    0x6a as libc::c_int as uint8_t,
    0xcb as libc::c_int as uint8_t,
    0xbe as libc::c_int as uint8_t,
    0x39 as libc::c_int as uint8_t,
    0x4a as libc::c_int as uint8_t,
    0x4c as libc::c_int as uint8_t,
    0x58 as libc::c_int as uint8_t,
    0xcf as libc::c_int as uint8_t,
    0xd0 as libc::c_int as uint8_t,
    0xef as libc::c_int as uint8_t,
    0xaa as libc::c_int as uint8_t,
    0xfb as libc::c_int as uint8_t,
    0x43 as libc::c_int as uint8_t,
    0x4d as libc::c_int as uint8_t,
    0x33 as libc::c_int as uint8_t,
    0x85 as libc::c_int as uint8_t,
    0x45 as libc::c_int as uint8_t,
    0xf9 as libc::c_int as uint8_t,
    0x2 as libc::c_int as uint8_t,
    0x7f as libc::c_int as uint8_t,
    0x50 as libc::c_int as uint8_t,
    0x3c as libc::c_int as uint8_t,
    0x9f as libc::c_int as uint8_t,
    0xa8 as libc::c_int as uint8_t,
    0x51 as libc::c_int as uint8_t,
    0xa3 as libc::c_int as uint8_t,
    0x40 as libc::c_int as uint8_t,
    0x8f as libc::c_int as uint8_t,
    0x92 as libc::c_int as uint8_t,
    0x9d as libc::c_int as uint8_t,
    0x38 as libc::c_int as uint8_t,
    0xf5 as libc::c_int as uint8_t,
    0xbc as libc::c_int as uint8_t,
    0xb6 as libc::c_int as uint8_t,
    0xda as libc::c_int as uint8_t,
    0x21 as libc::c_int as uint8_t,
    0x10 as libc::c_int as uint8_t,
    0xff as libc::c_int as uint8_t,
    0xf3 as libc::c_int as uint8_t,
    0xd2 as libc::c_int as uint8_t,
    0xcd as libc::c_int as uint8_t,
    0xc as libc::c_int as uint8_t,
    0x13 as libc::c_int as uint8_t,
    0xec as libc::c_int as uint8_t,
    0x5f as libc::c_int as uint8_t,
    0x97 as libc::c_int as uint8_t,
    0x44 as libc::c_int as uint8_t,
    0x17 as libc::c_int as uint8_t,
    0xc4 as libc::c_int as uint8_t,
    0xa7 as libc::c_int as uint8_t,
    0x7e as libc::c_int as uint8_t,
    0x3d as libc::c_int as uint8_t,
    0x64 as libc::c_int as uint8_t,
    0x5d as libc::c_int as uint8_t,
    0x19 as libc::c_int as uint8_t,
    0x73 as libc::c_int as uint8_t,
    0x60 as libc::c_int as uint8_t,
    0x81 as libc::c_int as uint8_t,
    0x4f as libc::c_int as uint8_t,
    0xdc as libc::c_int as uint8_t,
    0x22 as libc::c_int as uint8_t,
    0x2a as libc::c_int as uint8_t,
    0x90 as libc::c_int as uint8_t,
    0x88 as libc::c_int as uint8_t,
    0x46 as libc::c_int as uint8_t,
    0xee as libc::c_int as uint8_t,
    0xb8 as libc::c_int as uint8_t,
    0x14 as libc::c_int as uint8_t,
    0xde as libc::c_int as uint8_t,
    0x5e as libc::c_int as uint8_t,
    0xb as libc::c_int as uint8_t,
    0xdb as libc::c_int as uint8_t,
    0xe0 as libc::c_int as uint8_t,
    0x32 as libc::c_int as uint8_t,
    0x3a as libc::c_int as uint8_t,
    0xa as libc::c_int as uint8_t,
    0x49 as libc::c_int as uint8_t,
    0x6 as libc::c_int as uint8_t,
    0x24 as libc::c_int as uint8_t,
    0x5c as libc::c_int as uint8_t,
    0xc2 as libc::c_int as uint8_t,
    0xd3 as libc::c_int as uint8_t,
    0xac as libc::c_int as uint8_t,
    0x62 as libc::c_int as uint8_t,
    0x91 as libc::c_int as uint8_t,
    0x95 as libc::c_int as uint8_t,
    0xe4 as libc::c_int as uint8_t,
    0x79 as libc::c_int as uint8_t,
    0xe7 as libc::c_int as uint8_t,
    0xc8 as libc::c_int as uint8_t,
    0x37 as libc::c_int as uint8_t,
    0x6d as libc::c_int as uint8_t,
    0x8d as libc::c_int as uint8_t,
    0xd5 as libc::c_int as uint8_t,
    0x4e as libc::c_int as uint8_t,
    0xa9 as libc::c_int as uint8_t,
    0x6c as libc::c_int as uint8_t,
    0x56 as libc::c_int as uint8_t,
    0xf4 as libc::c_int as uint8_t,
    0xea as libc::c_int as uint8_t,
    0x65 as libc::c_int as uint8_t,
    0x7a as libc::c_int as uint8_t,
    0xae as libc::c_int as uint8_t,
    0x8 as libc::c_int as uint8_t,
    0xba as libc::c_int as uint8_t,
    0x78 as libc::c_int as uint8_t,
    0x25 as libc::c_int as uint8_t,
    0x2e as libc::c_int as uint8_t,
    0x1c as libc::c_int as uint8_t,
    0xa6 as libc::c_int as uint8_t,
    0xb4 as libc::c_int as uint8_t,
    0xc6 as libc::c_int as uint8_t,
    0xe8 as libc::c_int as uint8_t,
    0xdd as libc::c_int as uint8_t,
    0x74 as libc::c_int as uint8_t,
    0x1f as libc::c_int as uint8_t,
    0x4b as libc::c_int as uint8_t,
    0xbd as libc::c_int as uint8_t,
    0x8b as libc::c_int as uint8_t,
    0x8a as libc::c_int as uint8_t,
    0x70 as libc::c_int as uint8_t,
    0x3e as libc::c_int as uint8_t,
    0xb5 as libc::c_int as uint8_t,
    0x66 as libc::c_int as uint8_t,
    0x48 as libc::c_int as uint8_t,
    0x3 as libc::c_int as uint8_t,
    0xf6 as libc::c_int as uint8_t,
    0xe as libc::c_int as uint8_t,
    0x61 as libc::c_int as uint8_t,
    0x35 as libc::c_int as uint8_t,
    0x57 as libc::c_int as uint8_t,
    0xb9 as libc::c_int as uint8_t,
    0x86 as libc::c_int as uint8_t,
    0xc1 as libc::c_int as uint8_t,
    0x1d as libc::c_int as uint8_t,
    0x9e as libc::c_int as uint8_t,
    0xe1 as libc::c_int as uint8_t,
    0xf8 as libc::c_int as uint8_t,
    0x98 as libc::c_int as uint8_t,
    0x11 as libc::c_int as uint8_t,
    0x69 as libc::c_int as uint8_t,
    0xd9 as libc::c_int as uint8_t,
    0x8e as libc::c_int as uint8_t,
    0x94 as libc::c_int as uint8_t,
    0x9b as libc::c_int as uint8_t,
    0x1e as libc::c_int as uint8_t,
    0x87 as libc::c_int as uint8_t,
    0xe9 as libc::c_int as uint8_t,
    0xce as libc::c_int as uint8_t,
    0x55 as libc::c_int as uint8_t,
    0x28 as libc::c_int as uint8_t,
    0xdf as libc::c_int as uint8_t,
    0x8c as libc::c_int as uint8_t,
    0xa1 as libc::c_int as uint8_t,
    0x89 as libc::c_int as uint8_t,
    0xd as libc::c_int as uint8_t,
    0xbf as libc::c_int as uint8_t,
    0xe6 as libc::c_int as uint8_t,
    0x42 as libc::c_int as uint8_t,
    0x68 as libc::c_int as uint8_t,
    0x41 as libc::c_int as uint8_t,
    0x99 as libc::c_int as uint8_t,
    0x2d as libc::c_int as uint8_t,
    0xf as libc::c_int as uint8_t,
    0xb0 as libc::c_int as uint8_t,
    0x54 as libc::c_int as uint8_t,
    0xbb as libc::c_int as uint8_t,
    0x16 as libc::c_int as uint8_t,
];
static mut aes_inv_sbox: [uint8_t; 256] = [
    0x52 as libc::c_int as uint8_t,
    0x9 as libc::c_int as uint8_t,
    0x6a as libc::c_int as uint8_t,
    0xd5 as libc::c_int as uint8_t,
    0x30 as libc::c_int as uint8_t,
    0x36 as libc::c_int as uint8_t,
    0xa5 as libc::c_int as uint8_t,
    0x38 as libc::c_int as uint8_t,
    0xbf as libc::c_int as uint8_t,
    0x40 as libc::c_int as uint8_t,
    0xa3 as libc::c_int as uint8_t,
    0x9e as libc::c_int as uint8_t,
    0x81 as libc::c_int as uint8_t,
    0xf3 as libc::c_int as uint8_t,
    0xd7 as libc::c_int as uint8_t,
    0xfb as libc::c_int as uint8_t,
    0x7c as libc::c_int as uint8_t,
    0xe3 as libc::c_int as uint8_t,
    0x39 as libc::c_int as uint8_t,
    0x82 as libc::c_int as uint8_t,
    0x9b as libc::c_int as uint8_t,
    0x2f as libc::c_int as uint8_t,
    0xff as libc::c_int as uint8_t,
    0x87 as libc::c_int as uint8_t,
    0x34 as libc::c_int as uint8_t,
    0x8e as libc::c_int as uint8_t,
    0x43 as libc::c_int as uint8_t,
    0x44 as libc::c_int as uint8_t,
    0xc4 as libc::c_int as uint8_t,
    0xde as libc::c_int as uint8_t,
    0xe9 as libc::c_int as uint8_t,
    0xcb as libc::c_int as uint8_t,
    0x54 as libc::c_int as uint8_t,
    0x7b as libc::c_int as uint8_t,
    0x94 as libc::c_int as uint8_t,
    0x32 as libc::c_int as uint8_t,
    0xa6 as libc::c_int as uint8_t,
    0xc2 as libc::c_int as uint8_t,
    0x23 as libc::c_int as uint8_t,
    0x3d as libc::c_int as uint8_t,
    0xee as libc::c_int as uint8_t,
    0x4c as libc::c_int as uint8_t,
    0x95 as libc::c_int as uint8_t,
    0xb as libc::c_int as uint8_t,
    0x42 as libc::c_int as uint8_t,
    0xfa as libc::c_int as uint8_t,
    0xc3 as libc::c_int as uint8_t,
    0x4e as libc::c_int as uint8_t,
    0x8 as libc::c_int as uint8_t,
    0x2e as libc::c_int as uint8_t,
    0xa1 as libc::c_int as uint8_t,
    0x66 as libc::c_int as uint8_t,
    0x28 as libc::c_int as uint8_t,
    0xd9 as libc::c_int as uint8_t,
    0x24 as libc::c_int as uint8_t,
    0xb2 as libc::c_int as uint8_t,
    0x76 as libc::c_int as uint8_t,
    0x5b as libc::c_int as uint8_t,
    0xa2 as libc::c_int as uint8_t,
    0x49 as libc::c_int as uint8_t,
    0x6d as libc::c_int as uint8_t,
    0x8b as libc::c_int as uint8_t,
    0xd1 as libc::c_int as uint8_t,
    0x25 as libc::c_int as uint8_t,
    0x72 as libc::c_int as uint8_t,
    0xf8 as libc::c_int as uint8_t,
    0xf6 as libc::c_int as uint8_t,
    0x64 as libc::c_int as uint8_t,
    0x86 as libc::c_int as uint8_t,
    0x68 as libc::c_int as uint8_t,
    0x98 as libc::c_int as uint8_t,
    0x16 as libc::c_int as uint8_t,
    0xd4 as libc::c_int as uint8_t,
    0xa4 as libc::c_int as uint8_t,
    0x5c as libc::c_int as uint8_t,
    0xcc as libc::c_int as uint8_t,
    0x5d as libc::c_int as uint8_t,
    0x65 as libc::c_int as uint8_t,
    0xb6 as libc::c_int as uint8_t,
    0x92 as libc::c_int as uint8_t,
    0x6c as libc::c_int as uint8_t,
    0x70 as libc::c_int as uint8_t,
    0x48 as libc::c_int as uint8_t,
    0x50 as libc::c_int as uint8_t,
    0xfd as libc::c_int as uint8_t,
    0xed as libc::c_int as uint8_t,
    0xb9 as libc::c_int as uint8_t,
    0xda as libc::c_int as uint8_t,
    0x5e as libc::c_int as uint8_t,
    0x15 as libc::c_int as uint8_t,
    0x46 as libc::c_int as uint8_t,
    0x57 as libc::c_int as uint8_t,
    0xa7 as libc::c_int as uint8_t,
    0x8d as libc::c_int as uint8_t,
    0x9d as libc::c_int as uint8_t,
    0x84 as libc::c_int as uint8_t,
    0x90 as libc::c_int as uint8_t,
    0xd8 as libc::c_int as uint8_t,
    0xab as libc::c_int as uint8_t,
    0 as libc::c_int as uint8_t,
    0x8c as libc::c_int as uint8_t,
    0xbc as libc::c_int as uint8_t,
    0xd3 as libc::c_int as uint8_t,
    0xa as libc::c_int as uint8_t,
    0xf7 as libc::c_int as uint8_t,
    0xe4 as libc::c_int as uint8_t,
    0x58 as libc::c_int as uint8_t,
    0x5 as libc::c_int as uint8_t,
    0xb8 as libc::c_int as uint8_t,
    0xb3 as libc::c_int as uint8_t,
    0x45 as libc::c_int as uint8_t,
    0x6 as libc::c_int as uint8_t,
    0xd0 as libc::c_int as uint8_t,
    0x2c as libc::c_int as uint8_t,
    0x1e as libc::c_int as uint8_t,
    0x8f as libc::c_int as uint8_t,
    0xca as libc::c_int as uint8_t,
    0x3f as libc::c_int as uint8_t,
    0xf as libc::c_int as uint8_t,
    0x2 as libc::c_int as uint8_t,
    0xc1 as libc::c_int as uint8_t,
    0xaf as libc::c_int as uint8_t,
    0xbd as libc::c_int as uint8_t,
    0x3 as libc::c_int as uint8_t,
    0x1 as libc::c_int as uint8_t,
    0x13 as libc::c_int as uint8_t,
    0x8a as libc::c_int as uint8_t,
    0x6b as libc::c_int as uint8_t,
    0x3a as libc::c_int as uint8_t,
    0x91 as libc::c_int as uint8_t,
    0x11 as libc::c_int as uint8_t,
    0x41 as libc::c_int as uint8_t,
    0x4f as libc::c_int as uint8_t,
    0x67 as libc::c_int as uint8_t,
    0xdc as libc::c_int as uint8_t,
    0xea as libc::c_int as uint8_t,
    0x97 as libc::c_int as uint8_t,
    0xf2 as libc::c_int as uint8_t,
    0xcf as libc::c_int as uint8_t,
    0xce as libc::c_int as uint8_t,
    0xf0 as libc::c_int as uint8_t,
    0xb4 as libc::c_int as uint8_t,
    0xe6 as libc::c_int as uint8_t,
    0x73 as libc::c_int as uint8_t,
    0x96 as libc::c_int as uint8_t,
    0xac as libc::c_int as uint8_t,
    0x74 as libc::c_int as uint8_t,
    0x22 as libc::c_int as uint8_t,
    0xe7 as libc::c_int as uint8_t,
    0xad as libc::c_int as uint8_t,
    0x35 as libc::c_int as uint8_t,
    0x85 as libc::c_int as uint8_t,
    0xe2 as libc::c_int as uint8_t,
    0xf9 as libc::c_int as uint8_t,
    0x37 as libc::c_int as uint8_t,
    0xe8 as libc::c_int as uint8_t,
    0x1c as libc::c_int as uint8_t,
    0x75 as libc::c_int as uint8_t,
    0xdf as libc::c_int as uint8_t,
    0x6e as libc::c_int as uint8_t,
    0x47 as libc::c_int as uint8_t,
    0xf1 as libc::c_int as uint8_t,
    0x1a as libc::c_int as uint8_t,
    0x71 as libc::c_int as uint8_t,
    0x1d as libc::c_int as uint8_t,
    0x29 as libc::c_int as uint8_t,
    0xc5 as libc::c_int as uint8_t,
    0x89 as libc::c_int as uint8_t,
    0x6f as libc::c_int as uint8_t,
    0xb7 as libc::c_int as uint8_t,
    0x62 as libc::c_int as uint8_t,
    0xe as libc::c_int as uint8_t,
    0xaa as libc::c_int as uint8_t,
    0x18 as libc::c_int as uint8_t,
    0xbe as libc::c_int as uint8_t,
    0x1b as libc::c_int as uint8_t,
    0xfc as libc::c_int as uint8_t,
    0x56 as libc::c_int as uint8_t,
    0x3e as libc::c_int as uint8_t,
    0x4b as libc::c_int as uint8_t,
    0xc6 as libc::c_int as uint8_t,
    0xd2 as libc::c_int as uint8_t,
    0x79 as libc::c_int as uint8_t,
    0x20 as libc::c_int as uint8_t,
    0x9a as libc::c_int as uint8_t,
    0xdb as libc::c_int as uint8_t,
    0xc0 as libc::c_int as uint8_t,
    0xfe as libc::c_int as uint8_t,
    0x78 as libc::c_int as uint8_t,
    0xcd as libc::c_int as uint8_t,
    0x5a as libc::c_int as uint8_t,
    0xf4 as libc::c_int as uint8_t,
    0x1f as libc::c_int as uint8_t,
    0xdd as libc::c_int as uint8_t,
    0xa8 as libc::c_int as uint8_t,
    0x33 as libc::c_int as uint8_t,
    0x88 as libc::c_int as uint8_t,
    0x7 as libc::c_int as uint8_t,
    0xc7 as libc::c_int as uint8_t,
    0x31 as libc::c_int as uint8_t,
    0xb1 as libc::c_int as uint8_t,
    0x12 as libc::c_int as uint8_t,
    0x10 as libc::c_int as uint8_t,
    0x59 as libc::c_int as uint8_t,
    0x27 as libc::c_int as uint8_t,
    0x80 as libc::c_int as uint8_t,
    0xec as libc::c_int as uint8_t,
    0x5f as libc::c_int as uint8_t,
    0x60 as libc::c_int as uint8_t,
    0x51 as libc::c_int as uint8_t,
    0x7f as libc::c_int as uint8_t,
    0xa9 as libc::c_int as uint8_t,
    0x19 as libc::c_int as uint8_t,
    0xb5 as libc::c_int as uint8_t,
    0x4a as libc::c_int as uint8_t,
    0xd as libc::c_int as uint8_t,
    0x2d as libc::c_int as uint8_t,
    0xe5 as libc::c_int as uint8_t,
    0x7a as libc::c_int as uint8_t,
    0x9f as libc::c_int as uint8_t,
    0x93 as libc::c_int as uint8_t,
    0xc9 as libc::c_int as uint8_t,
    0x9c as libc::c_int as uint8_t,
    0xef as libc::c_int as uint8_t,
    0xa0 as libc::c_int as uint8_t,
    0xe0 as libc::c_int as uint8_t,
    0x3b as libc::c_int as uint8_t,
    0x4d as libc::c_int as uint8_t,
    0xae as libc::c_int as uint8_t,
    0x2a as libc::c_int as uint8_t,
    0xf5 as libc::c_int as uint8_t,
    0xb0 as libc::c_int as uint8_t,
    0xc8 as libc::c_int as uint8_t,
    0xeb as libc::c_int as uint8_t,
    0xbb as libc::c_int as uint8_t,
    0x3c as libc::c_int as uint8_t,
    0x83 as libc::c_int as uint8_t,
    0x53 as libc::c_int as uint8_t,
    0x99 as libc::c_int as uint8_t,
    0x61 as libc::c_int as uint8_t,
    0x17 as libc::c_int as uint8_t,
    0x2b as libc::c_int as uint8_t,
    0x4 as libc::c_int as uint8_t,
    0x7e as libc::c_int as uint8_t,
    0xba as libc::c_int as uint8_t,
    0x77 as libc::c_int as uint8_t,
    0xd6 as libc::c_int as uint8_t,
    0x26 as libc::c_int as uint8_t,
    0xe1 as libc::c_int as uint8_t,
    0x69 as libc::c_int as uint8_t,
    0x14 as libc::c_int as uint8_t,
    0x63 as libc::c_int as uint8_t,
    0x55 as libc::c_int as uint8_t,
    0x21 as libc::c_int as uint8_t,
    0xc as libc::c_int as uint8_t,
    0x7d as libc::c_int as uint8_t,
];
unsafe extern "C" fn aes_128_expand_encryption_key(
    mut key: *const uint8_t,
    mut expanded_key: *mut srtp_aes_expanded_key_t,
) {
    let mut i: libc::c_int = 0;
    let mut rc: uint8_t = 0;
    rc = 1 as libc::c_int as uint8_t;
    (*expanded_key).num_rounds = 10 as libc::c_int;
    v128_copy_octet_string(
        &mut *((*expanded_key).round).as_mut_ptr().offset(0 as libc::c_int as isize),
        key,
    );
    i = 1 as libc::c_int;
    while i < 11 as libc::c_int {
        (*expanded_key)
            .round[i as usize]
            .v8[0 as libc::c_int
            as usize] = (aes_sbox[(*expanded_key)
            .round[(i - 1 as libc::c_int) as usize]
            .v8[13 as libc::c_int as usize] as usize] as libc::c_int ^ rc as libc::c_int)
            as uint8_t;
        (*expanded_key)
            .round[i as usize]
            .v8[1 as libc::c_int
            as usize] = aes_sbox[(*expanded_key)
            .round[(i - 1 as libc::c_int) as usize]
            .v8[14 as libc::c_int as usize] as usize];
        (*expanded_key)
            .round[i as usize]
            .v8[2 as libc::c_int
            as usize] = aes_sbox[(*expanded_key)
            .round[(i - 1 as libc::c_int) as usize]
            .v8[15 as libc::c_int as usize] as usize];
        (*expanded_key)
            .round[i as usize]
            .v8[3 as libc::c_int
            as usize] = aes_sbox[(*expanded_key)
            .round[(i - 1 as libc::c_int) as usize]
            .v8[12 as libc::c_int as usize] as usize];
        (*expanded_key).round[i as usize].v32[0 as libc::c_int as usize]
            ^= (*expanded_key)
                .round[(i - 1 as libc::c_int) as usize]
                .v32[0 as libc::c_int as usize];
        (*expanded_key)
            .round[i as usize]
            .v32[1 as libc::c_int
            as usize] = (*expanded_key).round[i as usize].v32[0 as libc::c_int as usize]
            ^ (*expanded_key)
                .round[(i - 1 as libc::c_int) as usize]
                .v32[1 as libc::c_int as usize];
        (*expanded_key)
            .round[i as usize]
            .v32[2 as libc::c_int
            as usize] = (*expanded_key).round[i as usize].v32[1 as libc::c_int as usize]
            ^ (*expanded_key)
                .round[(i - 1 as libc::c_int) as usize]
                .v32[2 as libc::c_int as usize];
        (*expanded_key)
            .round[i as usize]
            .v32[3 as libc::c_int
            as usize] = (*expanded_key).round[i as usize].v32[2 as libc::c_int as usize]
            ^ (*expanded_key)
                .round[(i - 1 as libc::c_int) as usize]
                .v32[3 as libc::c_int as usize];
        rc = (if rc as libc::c_int & 128 as libc::c_int != 0 {
            (rc as libc::c_int) << 1 as libc::c_int ^ 0x1b as libc::c_int
        } else {
            (rc as libc::c_int) << 1 as libc::c_int
        }) as uint8_t;
        i += 1;
    }
}
unsafe extern "C" fn aes_256_expand_encryption_key(
    mut key: *const libc::c_uchar,
    mut expanded_key: *mut srtp_aes_expanded_key_t,
) {
    let mut i: libc::c_int = 0;
    let mut rc: uint8_t = 0;
    rc = 1 as libc::c_int as uint8_t;
    (*expanded_key).num_rounds = 14 as libc::c_int;
    v128_copy_octet_string(
        &mut *((*expanded_key).round).as_mut_ptr().offset(0 as libc::c_int as isize),
        key,
    );
    v128_copy_octet_string(
        &mut *((*expanded_key).round).as_mut_ptr().offset(1 as libc::c_int as isize),
        key.offset(16 as libc::c_int as isize),
    );
    i = 2 as libc::c_int;
    while i < 15 as libc::c_int {
        if i & 1 as libc::c_int == 0 as libc::c_int {
            (*expanded_key)
                .round[i as usize]
                .v8[0 as libc::c_int
                as usize] = (aes_sbox[(*expanded_key)
                .round[(i - 1 as libc::c_int) as usize]
                .v8[13 as libc::c_int as usize] as usize] as libc::c_int
                ^ rc as libc::c_int) as uint8_t;
            (*expanded_key)
                .round[i as usize]
                .v8[1 as libc::c_int
                as usize] = aes_sbox[(*expanded_key)
                .round[(i - 1 as libc::c_int) as usize]
                .v8[14 as libc::c_int as usize] as usize];
            (*expanded_key)
                .round[i as usize]
                .v8[2 as libc::c_int
                as usize] = aes_sbox[(*expanded_key)
                .round[(i - 1 as libc::c_int) as usize]
                .v8[15 as libc::c_int as usize] as usize];
            (*expanded_key)
                .round[i as usize]
                .v8[3 as libc::c_int
                as usize] = aes_sbox[(*expanded_key)
                .round[(i - 1 as libc::c_int) as usize]
                .v8[12 as libc::c_int as usize] as usize];
            rc = (if rc as libc::c_int & 128 as libc::c_int != 0 {
                (rc as libc::c_int) << 1 as libc::c_int ^ 0x1b as libc::c_int
            } else {
                (rc as libc::c_int) << 1 as libc::c_int
            }) as uint8_t;
        } else {
            (*expanded_key)
                .round[i as usize]
                .v8[0 as libc::c_int
                as usize] = aes_sbox[(*expanded_key)
                .round[(i - 1 as libc::c_int) as usize]
                .v8[12 as libc::c_int as usize] as usize];
            (*expanded_key)
                .round[i as usize]
                .v8[1 as libc::c_int
                as usize] = aes_sbox[(*expanded_key)
                .round[(i - 1 as libc::c_int) as usize]
                .v8[13 as libc::c_int as usize] as usize];
            (*expanded_key)
                .round[i as usize]
                .v8[2 as libc::c_int
                as usize] = aes_sbox[(*expanded_key)
                .round[(i - 1 as libc::c_int) as usize]
                .v8[14 as libc::c_int as usize] as usize];
            (*expanded_key)
                .round[i as usize]
                .v8[3 as libc::c_int
                as usize] = aes_sbox[(*expanded_key)
                .round[(i - 1 as libc::c_int) as usize]
                .v8[15 as libc::c_int as usize] as usize];
        }
        (*expanded_key).round[i as usize].v32[0 as libc::c_int as usize]
            ^= (*expanded_key)
                .round[(i - 2 as libc::c_int) as usize]
                .v32[0 as libc::c_int as usize];
        (*expanded_key)
            .round[i as usize]
            .v32[1 as libc::c_int
            as usize] = (*expanded_key).round[i as usize].v32[0 as libc::c_int as usize]
            ^ (*expanded_key)
                .round[(i - 2 as libc::c_int) as usize]
                .v32[1 as libc::c_int as usize];
        (*expanded_key)
            .round[i as usize]
            .v32[2 as libc::c_int
            as usize] = (*expanded_key).round[i as usize].v32[1 as libc::c_int as usize]
            ^ (*expanded_key)
                .round[(i - 2 as libc::c_int) as usize]
                .v32[2 as libc::c_int as usize];
        (*expanded_key)
            .round[i as usize]
            .v32[3 as libc::c_int
            as usize] = (*expanded_key).round[i as usize].v32[2 as libc::c_int as usize]
            ^ (*expanded_key)
                .round[(i - 2 as libc::c_int) as usize]
                .v32[3 as libc::c_int as usize];
        i += 1;
    }
}
#[no_mangle]
pub unsafe extern "C" fn srtp_aes_expand_encryption_key(
    mut key: *const uint8_t,
    mut key_len: libc::c_int,
    mut expanded_key: *mut srtp_aes_expanded_key_t,
) -> srtp_err_status_t {
    if key_len == 16 as libc::c_int {
        aes_128_expand_encryption_key(key, expanded_key);
        return srtp_err_status_ok;
    } else if key_len == 24 as libc::c_int {
        return srtp_err_status_bad_param
    } else if key_len == 32 as libc::c_int {
        aes_256_expand_encryption_key(key, expanded_key);
        return srtp_err_status_ok;
    } else {
        return srtp_err_status_bad_param
    };
}
#[no_mangle]
pub unsafe extern "C" fn srtp_aes_expand_decryption_key(
    mut key: *const uint8_t,
    mut key_len: libc::c_int,
    mut expanded_key: *mut srtp_aes_expanded_key_t,
) -> srtp_err_status_t {
    let mut i: libc::c_int = 0;
    let mut status: srtp_err_status_t = srtp_err_status_ok;
    let mut num_rounds: libc::c_int = (*expanded_key).num_rounds;
    status = srtp_aes_expand_encryption_key(key, key_len, expanded_key);
    if status as u64 != 0 {
        return status;
    }
    i = 0 as libc::c_int;
    while i < num_rounds / 2 as libc::c_int {
        let mut tmp: v128_t = v128_t { v8: [0; 16] };
        tmp
            .v32[0 as libc::c_int
            as usize] = (*expanded_key)
            .round[(num_rounds - i) as usize]
            .v32[0 as libc::c_int as usize];
        tmp
            .v32[1 as libc::c_int
            as usize] = (*expanded_key)
            .round[(num_rounds - i) as usize]
            .v32[1 as libc::c_int as usize];
        tmp
            .v32[2 as libc::c_int
            as usize] = (*expanded_key)
            .round[(num_rounds - i) as usize]
            .v32[2 as libc::c_int as usize];
        tmp
            .v32[3 as libc::c_int
            as usize] = (*expanded_key)
            .round[(num_rounds - i) as usize]
            .v32[3 as libc::c_int as usize];
        (*expanded_key)
            .round[(num_rounds - i) as usize]
            .v32[0 as libc::c_int
            as usize] = (*expanded_key).round[i as usize].v32[0 as libc::c_int as usize];
        (*expanded_key)
            .round[(num_rounds - i) as usize]
            .v32[1 as libc::c_int
            as usize] = (*expanded_key).round[i as usize].v32[1 as libc::c_int as usize];
        (*expanded_key)
            .round[(num_rounds - i) as usize]
            .v32[2 as libc::c_int
            as usize] = (*expanded_key).round[i as usize].v32[2 as libc::c_int as usize];
        (*expanded_key)
            .round[(num_rounds - i) as usize]
            .v32[3 as libc::c_int
            as usize] = (*expanded_key).round[i as usize].v32[3 as libc::c_int as usize];
        (*expanded_key)
            .round[i as usize]
            .v32[0 as libc::c_int as usize] = tmp.v32[0 as libc::c_int as usize];
        (*expanded_key)
            .round[i as usize]
            .v32[1 as libc::c_int as usize] = tmp.v32[1 as libc::c_int as usize];
        (*expanded_key)
            .round[i as usize]
            .v32[2 as libc::c_int as usize] = tmp.v32[2 as libc::c_int as usize];
        (*expanded_key)
            .round[i as usize]
            .v32[3 as libc::c_int as usize] = tmp.v32[3 as libc::c_int as usize];
        i += 1;
    }
    i = 1 as libc::c_int;
    while i < num_rounds {
        let mut c0: uint32_t = 0;
        let mut c1: uint32_t = 0;
        let mut c2: uint32_t = 0;
        let mut c3: uint32_t = 0;
        c0 = U0[aes_sbox[(*expanded_key).round[i as usize].v8[0 as libc::c_int as usize]
            as usize] as usize]
            ^ U1[aes_sbox[(*expanded_key).round[i as usize].v8[1 as libc::c_int as usize]
                as usize] as usize]
            ^ U2[aes_sbox[(*expanded_key).round[i as usize].v8[2 as libc::c_int as usize]
                as usize] as usize]
            ^ U3[aes_sbox[(*expanded_key).round[i as usize].v8[3 as libc::c_int as usize]
                as usize] as usize];
        c1 = U0[aes_sbox[(*expanded_key).round[i as usize].v8[4 as libc::c_int as usize]
            as usize] as usize]
            ^ U1[aes_sbox[(*expanded_key).round[i as usize].v8[5 as libc::c_int as usize]
                as usize] as usize]
            ^ U2[aes_sbox[(*expanded_key).round[i as usize].v8[6 as libc::c_int as usize]
                as usize] as usize]
            ^ U3[aes_sbox[(*expanded_key).round[i as usize].v8[7 as libc::c_int as usize]
                as usize] as usize];
        c2 = U0[aes_sbox[(*expanded_key).round[i as usize].v8[8 as libc::c_int as usize]
            as usize] as usize]
            ^ U1[aes_sbox[(*expanded_key).round[i as usize].v8[9 as libc::c_int as usize]
                as usize] as usize]
            ^ U2[aes_sbox[(*expanded_key)
                .round[i as usize]
                .v8[10 as libc::c_int as usize] as usize] as usize]
            ^ U3[aes_sbox[(*expanded_key)
                .round[i as usize]
                .v8[11 as libc::c_int as usize] as usize] as usize];
        c3 = U0[aes_sbox[(*expanded_key).round[i as usize].v8[12 as libc::c_int as usize]
            as usize] as usize]
            ^ U1[aes_sbox[(*expanded_key)
                .round[i as usize]
                .v8[13 as libc::c_int as usize] as usize] as usize]
            ^ U2[aes_sbox[(*expanded_key)
                .round[i as usize]
                .v8[14 as libc::c_int as usize] as usize] as usize]
            ^ U3[aes_sbox[(*expanded_key)
                .round[i as usize]
                .v8[15 as libc::c_int as usize] as usize] as usize];
        (*expanded_key).round[i as usize].v32[0 as libc::c_int as usize] = c0;
        (*expanded_key).round[i as usize].v32[1 as libc::c_int as usize] = c1;
        (*expanded_key).round[i as usize].v32[2 as libc::c_int as usize] = c2;
        (*expanded_key).round[i as usize].v32[3 as libc::c_int as usize] = c3;
        i += 1;
    }
    return srtp_err_status_ok;
}
#[inline]
unsafe extern "C" fn aes_round(mut state: *mut v128_t, mut round_key: *const v128_t) {
    let mut column0: uint32_t = 0;
    let mut column1: uint32_t = 0;
    let mut column2: uint32_t = 0;
    let mut column3: uint32_t = 0;
    column0 = T0[(*state).v8[0 as libc::c_int as usize] as usize]
        ^ T1[(*state).v8[5 as libc::c_int as usize] as usize]
        ^ T2[(*state).v8[10 as libc::c_int as usize] as usize]
        ^ T3[(*state).v8[15 as libc::c_int as usize] as usize];
    column1 = T0[(*state).v8[4 as libc::c_int as usize] as usize]
        ^ T1[(*state).v8[9 as libc::c_int as usize] as usize]
        ^ T2[(*state).v8[14 as libc::c_int as usize] as usize]
        ^ T3[(*state).v8[3 as libc::c_int as usize] as usize];
    column2 = T0[(*state).v8[8 as libc::c_int as usize] as usize]
        ^ T1[(*state).v8[13 as libc::c_int as usize] as usize]
        ^ T2[(*state).v8[2 as libc::c_int as usize] as usize]
        ^ T3[(*state).v8[7 as libc::c_int as usize] as usize];
    column3 = T0[(*state).v8[12 as libc::c_int as usize] as usize]
        ^ T1[(*state).v8[1 as libc::c_int as usize] as usize]
        ^ T2[(*state).v8[6 as libc::c_int as usize] as usize]
        ^ T3[(*state).v8[11 as libc::c_int as usize] as usize];
    (*state)
        .v32[0 as libc::c_int
        as usize] = column0 ^ (*round_key).v32[0 as libc::c_int as usize];
    (*state)
        .v32[1 as libc::c_int
        as usize] = column1 ^ (*round_key).v32[1 as libc::c_int as usize];
    (*state)
        .v32[2 as libc::c_int
        as usize] = column2 ^ (*round_key).v32[2 as libc::c_int as usize];
    (*state)
        .v32[3 as libc::c_int
        as usize] = column3 ^ (*round_key).v32[3 as libc::c_int as usize];
}
#[inline]
unsafe extern "C" fn aes_inv_round(
    mut state: *mut v128_t,
    mut round_key: *const v128_t,
) {
    let mut column0: uint32_t = 0;
    let mut column1: uint32_t = 0;
    let mut column2: uint32_t = 0;
    let mut column3: uint32_t = 0;
    column0 = U0[(*state).v8[0 as libc::c_int as usize] as usize]
        ^ U1[(*state).v8[13 as libc::c_int as usize] as usize]
        ^ U2[(*state).v8[10 as libc::c_int as usize] as usize]
        ^ U3[(*state).v8[7 as libc::c_int as usize] as usize];
    column1 = U0[(*state).v8[4 as libc::c_int as usize] as usize]
        ^ U1[(*state).v8[1 as libc::c_int as usize] as usize]
        ^ U2[(*state).v8[14 as libc::c_int as usize] as usize]
        ^ U3[(*state).v8[11 as libc::c_int as usize] as usize];
    column2 = U0[(*state).v8[8 as libc::c_int as usize] as usize]
        ^ U1[(*state).v8[5 as libc::c_int as usize] as usize]
        ^ U2[(*state).v8[2 as libc::c_int as usize] as usize]
        ^ U3[(*state).v8[15 as libc::c_int as usize] as usize];
    column3 = U0[(*state).v8[12 as libc::c_int as usize] as usize]
        ^ U1[(*state).v8[9 as libc::c_int as usize] as usize]
        ^ U2[(*state).v8[6 as libc::c_int as usize] as usize]
        ^ U3[(*state).v8[3 as libc::c_int as usize] as usize];
    (*state)
        .v32[0 as libc::c_int
        as usize] = column0 ^ (*round_key).v32[0 as libc::c_int as usize];
    (*state)
        .v32[1 as libc::c_int
        as usize] = column1 ^ (*round_key).v32[1 as libc::c_int as usize];
    (*state)
        .v32[2 as libc::c_int
        as usize] = column2 ^ (*round_key).v32[2 as libc::c_int as usize];
    (*state)
        .v32[3 as libc::c_int
        as usize] = column3 ^ (*round_key).v32[3 as libc::c_int as usize];
}
#[inline]
unsafe extern "C" fn aes_final_round(
    mut state: *mut v128_t,
    mut round_key: *const v128_t,
) {
    let mut tmp: uint8_t = 0;
    (*state)
        .v8[0 as libc::c_int
        as usize] = aes_sbox[(*state).v8[0 as libc::c_int as usize] as usize];
    (*state)
        .v8[4 as libc::c_int
        as usize] = aes_sbox[(*state).v8[4 as libc::c_int as usize] as usize];
    (*state)
        .v8[8 as libc::c_int
        as usize] = aes_sbox[(*state).v8[8 as libc::c_int as usize] as usize];
    (*state)
        .v8[12 as libc::c_int
        as usize] = aes_sbox[(*state).v8[12 as libc::c_int as usize] as usize];
    tmp = aes_sbox[(*state).v8[1 as libc::c_int as usize] as usize];
    (*state)
        .v8[1 as libc::c_int
        as usize] = aes_sbox[(*state).v8[5 as libc::c_int as usize] as usize];
    (*state)
        .v8[5 as libc::c_int
        as usize] = aes_sbox[(*state).v8[9 as libc::c_int as usize] as usize];
    (*state)
        .v8[9 as libc::c_int
        as usize] = aes_sbox[(*state).v8[13 as libc::c_int as usize] as usize];
    (*state).v8[13 as libc::c_int as usize] = tmp;
    tmp = aes_sbox[(*state).v8[10 as libc::c_int as usize] as usize];
    (*state)
        .v8[10 as libc::c_int
        as usize] = aes_sbox[(*state).v8[2 as libc::c_int as usize] as usize];
    (*state).v8[2 as libc::c_int as usize] = tmp;
    tmp = aes_sbox[(*state).v8[14 as libc::c_int as usize] as usize];
    (*state)
        .v8[14 as libc::c_int
        as usize] = aes_sbox[(*state).v8[6 as libc::c_int as usize] as usize];
    (*state).v8[6 as libc::c_int as usize] = tmp;
    tmp = aes_sbox[(*state).v8[15 as libc::c_int as usize] as usize];
    (*state)
        .v8[15 as libc::c_int
        as usize] = aes_sbox[(*state).v8[11 as libc::c_int as usize] as usize];
    (*state)
        .v8[11 as libc::c_int
        as usize] = aes_sbox[(*state).v8[7 as libc::c_int as usize] as usize];
    (*state)
        .v8[7 as libc::c_int
        as usize] = aes_sbox[(*state).v8[3 as libc::c_int as usize] as usize];
    (*state).v8[3 as libc::c_int as usize] = tmp;
    (*state).v64[0 as libc::c_int as usize]
        ^= (*round_key).v64[0 as libc::c_int as usize];
    (*state).v64[1 as libc::c_int as usize]
        ^= (*round_key).v64[1 as libc::c_int as usize];
}
#[inline]
unsafe extern "C" fn aes_inv_final_round(
    mut state: *mut v128_t,
    mut round_key: *const v128_t,
) {
    let mut tmp: uint8_t = 0;
    (*state)
        .v8[0 as libc::c_int
        as usize] = aes_inv_sbox[(*state).v8[0 as libc::c_int as usize] as usize];
    (*state)
        .v8[4 as libc::c_int
        as usize] = aes_inv_sbox[(*state).v8[4 as libc::c_int as usize] as usize];
    (*state)
        .v8[8 as libc::c_int
        as usize] = aes_inv_sbox[(*state).v8[8 as libc::c_int as usize] as usize];
    (*state)
        .v8[12 as libc::c_int
        as usize] = aes_inv_sbox[(*state).v8[12 as libc::c_int as usize] as usize];
    tmp = aes_inv_sbox[(*state).v8[13 as libc::c_int as usize] as usize];
    (*state)
        .v8[13 as libc::c_int
        as usize] = aes_inv_sbox[(*state).v8[9 as libc::c_int as usize] as usize];
    (*state)
        .v8[9 as libc::c_int
        as usize] = aes_inv_sbox[(*state).v8[5 as libc::c_int as usize] as usize];
    (*state)
        .v8[5 as libc::c_int
        as usize] = aes_inv_sbox[(*state).v8[1 as libc::c_int as usize] as usize];
    (*state).v8[1 as libc::c_int as usize] = tmp;
    tmp = aes_inv_sbox[(*state).v8[2 as libc::c_int as usize] as usize];
    (*state)
        .v8[2 as libc::c_int
        as usize] = aes_inv_sbox[(*state).v8[10 as libc::c_int as usize] as usize];
    (*state).v8[10 as libc::c_int as usize] = tmp;
    tmp = aes_inv_sbox[(*state).v8[6 as libc::c_int as usize] as usize];
    (*state)
        .v8[6 as libc::c_int
        as usize] = aes_inv_sbox[(*state).v8[14 as libc::c_int as usize] as usize];
    (*state).v8[14 as libc::c_int as usize] = tmp;
    tmp = aes_inv_sbox[(*state).v8[3 as libc::c_int as usize] as usize];
    (*state)
        .v8[3 as libc::c_int
        as usize] = aes_inv_sbox[(*state).v8[7 as libc::c_int as usize] as usize];
    (*state)
        .v8[7 as libc::c_int
        as usize] = aes_inv_sbox[(*state).v8[11 as libc::c_int as usize] as usize];
    (*state)
        .v8[11 as libc::c_int
        as usize] = aes_inv_sbox[(*state).v8[15 as libc::c_int as usize] as usize];
    (*state).v8[15 as libc::c_int as usize] = tmp;
    (*state).v64[0 as libc::c_int as usize]
        ^= (*round_key).v64[0 as libc::c_int as usize];
    (*state).v64[1 as libc::c_int as usize]
        ^= (*round_key).v64[1 as libc::c_int as usize];
}
#[no_mangle]
pub unsafe extern "C" fn srtp_aes_encrypt(
    mut plaintext: *mut v128_t,
    mut exp_key: *const srtp_aes_expanded_key_t,
) {
    (*plaintext).v64[0 as libc::c_int as usize]
        ^= (*exp_key).round[0 as libc::c_int as usize].v64[0 as libc::c_int as usize];
    (*plaintext).v64[1 as libc::c_int as usize]
        ^= (*exp_key).round[0 as libc::c_int as usize].v64[1 as libc::c_int as usize];
    aes_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(1 as libc::c_int as isize),
    );
    aes_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(2 as libc::c_int as isize),
    );
    aes_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(3 as libc::c_int as isize),
    );
    aes_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(4 as libc::c_int as isize),
    );
    aes_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(5 as libc::c_int as isize),
    );
    aes_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(6 as libc::c_int as isize),
    );
    aes_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(7 as libc::c_int as isize),
    );
    aes_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(8 as libc::c_int as isize),
    );
    aes_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(9 as libc::c_int as isize),
    );
    if (*exp_key).num_rounds == 10 as libc::c_int {
        aes_final_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(10 as libc::c_int as isize),
        );
    } else if (*exp_key).num_rounds == 12 as libc::c_int {
        aes_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(10 as libc::c_int as isize),
        );
        aes_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(11 as libc::c_int as isize),
        );
        aes_final_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(12 as libc::c_int as isize),
        );
    } else if (*exp_key).num_rounds == 14 as libc::c_int {
        aes_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(10 as libc::c_int as isize),
        );
        aes_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(11 as libc::c_int as isize),
        );
        aes_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(12 as libc::c_int as isize),
        );
        aes_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(13 as libc::c_int as isize),
        );
        aes_final_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(14 as libc::c_int as isize),
        );
    }
}
#[no_mangle]
pub unsafe extern "C" fn srtp_aes_decrypt(
    mut plaintext: *mut v128_t,
    mut exp_key: *const srtp_aes_expanded_key_t,
) {
    (*plaintext).v64[0 as libc::c_int as usize]
        ^= (*exp_key).round[0 as libc::c_int as usize].v64[0 as libc::c_int as usize];
    (*plaintext).v64[1 as libc::c_int as usize]
        ^= (*exp_key).round[0 as libc::c_int as usize].v64[1 as libc::c_int as usize];
    aes_inv_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(1 as libc::c_int as isize),
    );
    aes_inv_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(2 as libc::c_int as isize),
    );
    aes_inv_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(3 as libc::c_int as isize),
    );
    aes_inv_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(4 as libc::c_int as isize),
    );
    aes_inv_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(5 as libc::c_int as isize),
    );
    aes_inv_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(6 as libc::c_int as isize),
    );
    aes_inv_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(7 as libc::c_int as isize),
    );
    aes_inv_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(8 as libc::c_int as isize),
    );
    aes_inv_round(
        plaintext,
        &*((*exp_key).round).as_ptr().offset(9 as libc::c_int as isize),
    );
    if (*exp_key).num_rounds == 10 as libc::c_int {
        aes_inv_final_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(10 as libc::c_int as isize),
        );
    } else if (*exp_key).num_rounds == 12 as libc::c_int {
        aes_inv_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(10 as libc::c_int as isize),
        );
        aes_inv_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(11 as libc::c_int as isize),
        );
        aes_inv_final_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(12 as libc::c_int as isize),
        );
    } else if (*exp_key).num_rounds == 14 as libc::c_int {
        aes_inv_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(10 as libc::c_int as isize),
        );
        aes_inv_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(11 as libc::c_int as isize),
        );
        aes_inv_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(12 as libc::c_int as isize),
        );
        aes_inv_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(13 as libc::c_int as isize),
        );
        aes_inv_final_round(
            plaintext,
            &*((*exp_key).round).as_ptr().offset(14 as libc::c_int as isize),
        );
    }
}
